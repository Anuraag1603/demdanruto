*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  // ----------------------------------------
    2:  // Filename: main.c
    3:  // Description: 
    4:  //   This file contains the high-level code for the DEM project.
    5:  //   It initialises appropriate hardware subsystems,
    6:  //   creates application threads, and then starts the OS.
    7:  //
    8:  // Author: Danny Sok
    9:  // Date: 3-11-2011
   10:  // Date LM: 19-11-2011
   11:  
   12:  // Constants and dependencies
   13:  #include "main.h"
   14:  
   15:  static UINT16 SampleCount;
   16:  //OS_ECB SCIInUse;
   17:  //UINT8 *SCI0Stack[1024];
   18:  
   19:  
   20:  // ----------------------------------------
   21:  // main
   22:  //
   23:  // Initializes the various peripherals
   24:  // Handles received packets endlessly
   25:  // Input: none
   26:  // Output: none
   27:  // Conditions: none
   28:  //
   29:  
   30:  void main(void)
   31:  {
*** EVALUATION ***

Function: main
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  0000 1b90         [2]     LEAS  -16,SP
   32:    // Setup Routines.
   33:    BOOL bSetupState;
   34:    TTimerSetup timerSetup;
   35:    
   36:    Timer_Setup();
  0002 160000       [4]     JSR   Timer_Setup
   37:    Clock_Setup(prescaleRate, modulusCount);
  0005 c607         [1]     LDAB  #7
  0007 37           [2]     PSHB  
  0008 c60f         [1]     LDAB  #15
  000a 160000       [4]     JSR   Clock_Setup
  000d 32           [3]     PULA  
   38:    Analog_Setup(busClk);
  000e 8636         [1]     LDAA  #54
  0010 c7           [1]     CLRB  
  0011 ce016e       [2]     LDX   #366
  0014 160000       [4]     JSR   Analog_Setup
   39:    PWM_Setup(busClk);
  0017 8636         [1]     LDAA  #54
  0019 c7           [1]     CLRB  
  001a ce016e       [2]     LDX   #366
  001d 160000       [4]     JSR   PWM_Setup
   40:    
   41:    bSetupState = Packet_Setup(baudRate, busClk) &&
  0020 86c2         [1]     LDAA  #194
  0022 c7           [1]     CLRB  
  0023 3b           [2]     PSHD  
  0024 cd0001       [2]     LDY   #1
  0027 35           [2]     PSHY  
  0028 8636         [1]     LDAA  #54
  002a ce016e       [2]     LDX   #366
  002d 160000       [4]     JSR   Packet_Setup
  0030 1b84         [2]     LEAS  4,SP
  0032 04443b       [3]     TBEQ  D,*+62 ;abs = 0070
   42:                  EEPROM_Setup(oscClk, busClk) &&
  0035 8624         [1]     LDAA  #36
  0037 c7           [1]     CLRB  
  0038 3b           [2]     PSHD  
  0039 ce00f4       [2]     LDX   #244
  003c 34           [2]     PSHX  
  003d 8636         [1]     LDAA  #54
  003f ce016e       [2]     LDX   #366
  0042 160000       [4]     JSR   EEPROM_Setup
  0045 1b84         [2]     LEAS  4,SP
  0047 044426       [3]     TBEQ  D,*+41 ;abs = 0070
   43:                  CRG_SetupPLL(busClk, oscClk, refClk) &&
  004a 8636         [1]     LDAA  #54
  004c c7           [1]     CLRB  
  004d 3b           [2]     PSHD  
  004e ce016e       [2]     LDX   #366
  0051 34           [2]     PSHX  
  0052 cd2400       [2]     LDY   #9216
  0055 35           [2]     PSHY  
  0056 c6f4         [1]     LDAB  #244
  0058 87           [1]     CLRA  
  0059 3b           [2]     PSHD  
  005a 8612         [1]     LDAA  #18
  005c c7           [1]     CLRB  
  005d ce007a       [2]     LDX   #122
  0060 160000       [4]     JSR   CRG_SetupPLL
  0063 1b88         [2]     LEAS  8,SP
  0065 044408       [3]     TBEQ  D,*+11 ;abs = 0070
   44:                  CRG_SetupCOP(watchDogRate);
  0068 c601         [1]     LDAB  #1
  006a 160000       [4]     JSR   CRG_SetupCOP
  006d 046405       [3]     TBNE  D,*+8 ;abs = 0075
  0070 cd0000       [2]     LDY   #0
  0073 2003         [3]     BRA   *+5 ;abs = 0078
  0075 cd0001       [2]     LDY   #1
  0078 6d8e         [2]     STY   14,SP
   45:                  
   46:               
   47:  
   48:    timerSetup.outputCompare = bTRUE;
  007a c601         [1]     LDAB  #1
  007c 87           [1]     CLRA  
  007d 6c82         [2]     STD   2,SP
   49:    timerSetup.outputAction = TIMER_OUTPUT_DISCONNECT;      
  007f 6985         [2]     CLR   5,SP
  0081 6984         [2]     CLR   4,SP
   50:    timerSetup.inputDetection = TIMER_INPUT_OFF;
  0083 6987         [2]     CLR   7,SP
  0085 6986         [2]     CLR   6,SP
   51:    timerSetup.toggleOnOverflow = bFALSE;
  0087 6989         [2]     CLR   9,SP
  0089 6988         [2]     CLR   8,SP
   52:    timerSetup.interruptEnable = bTRUE;
  008b 6c8a         [2]     STD   10,SP
   53:    Timer_PeriodicTimerEnable(bTRUE);
  008d 160000       [4]     JSR   Timer_PeriodicTimerEnable
   54:    Timer_SetupPeriodicTimer(Periodic_Delay, busClk);
  0090 cc4e20       [2]     LDD   #20000
  0093 3b           [2]     PSHD  
  0094 8636         [1]     LDAA  #54
  0096 c7           [1]     CLRB  
  0097 ce016e       [2]     LDX   #366
  009a 160000       [4]     JSR   Timer_SetupPeriodicTimer
  009d 3a           [3]     PULD  
   55:    
   56:    Timer_SetupPulseAccumulators();
  009e 160000       [4]     JSR   Timer_SetupPulseAccumulators
   57:    Timer_Init(TIMER_Ch7, &timerSetup);
  00a1 c607         [1]     LDAB  #7
  00a3 87           [1]     CLRA  
  00a4 3b           [2]     PSHD  
  00a5 1a84         [2]     LEAX  4,SP
  00a7 b7c5         [1]     EXG   D,X
  00a9 6c82         [2]     STD   2,SP
  00ab 160000       [4]     JSR   Timer_Init
   58:    Timer_Set(TIMER_Ch7, Timer_Ch7_Delay);
  00ae c607         [1]     LDAB  #7
  00b0 87           [1]     CLRA  
  00b1 6c80         [2]     STD   0,SP
  00b3 cc07d0       [2]     LDD   #2000
  00b6 160000       [4]     JSR   Timer_Set
   59:    
   60:    Timer_Init(TIMER_Ch4, &timerSetup);
  00b9 c604         [1]     LDAB  #4
  00bb 87           [1]     CLRA  
  00bc 6c80         [2]     STD   0,SP
  00be ec82         [3]     LDD   2,SP
  00c0 160000       [4]     JSR   Timer_Init
   61:    Timer_Set(TIMER_Ch4, Timer_Ch4_Delay);
  00c3 c604         [1]     LDAB  #4
  00c5 87           [1]     CLRA  
  00c6 6c80         [2]     STD   0,SP
  00c8 ccc350       [2]     LDD   #50000
  00cb 160000       [4]     JSR   Timer_Set
   62:    Timer_Enable(TIMER_Ch4, bTRUE);
  00ce c604         [1]     LDAB  #4
  00d0 87           [1]     CLRA  
  00d1 6c80         [2]     STD   0,SP
  00d3 c601         [1]     LDAB  #1
  00d5 160000       [4]     JSR   Timer_Enable
  00d8 3a           [3]     PULD  
   63:    
   64:    HMI_Setup();   
  00d9 160000       [4]     JSR   HMI_Setup
   65:    
   66:    if (bSetupState)
  00dc ec8e         [3]     LDD   14,SP
  00de 2706         [3/1]   BEQ   *+8 ;abs = 00e6
   67:    {
   68:      // Turn on LED D11 to show success.
   69:      DDRE_BIT7   = 1;
  00e0 4c0080       [4]     BSET  _DDRE,#128
   70:      PORTE_BIT7  = 0;
  00e3 4d0080       [4]     BCLR  _PORTE,#128
   71:    }
   72:    
   73:    EnableInterrupts;
  00e6 10ef         [1]     CLI   
   74:    (void)HandleStartupPacket();
  00e8 160000       [4]     JSR   HandleStartupPacket
   75:    
   76:    SampleCount = 0;
  00eb c7           [1]     CLRB  
  00ec 87           [1]     CLRA  
  00ed 7c0000       [3]     STD   SampleCount
   77:    
   78:    //OS_Init();
   79:    //
   80:    //SCIInUse = OS_SemaphoreCreate(1); 
   81:    //error = OS_ThreadCreate(SCIThread, (void *)&SCI0DR, &SCI0Stack[1024], 10);
   82:     
   83:    //OS_Start();
   84:    
   85:    // Main loop
   86:    for (;;)
   87:    {
   88:      ARMCOP = copReset;
  00f0 c655         [1]     LDAB  #85
  00f2 5b00         [2]     STAB  _ARMCOP
   89:      
   90:      if ( Packet_Get() )
  00f4 160000       [4]     JSR   Packet_Get
  00f7 044403       [3]     TBEQ  D,*+6 ;abs = 00fd
   91:        HandlePacket();
  00fa 160000       [4]     JSR   HandlePacket
   92:      
   93:      // Determine if a second has passed. If it has then send a time packet  
   94:      if ( Clock_Update() )
  00fd 160000       [4]     JSR   Clock_Update
  0100 044406       [3]     TBEQ  D,*+9 ;abs = 0109
   95:      {
   96:        (void)HandleTimePacket();
  0103 160000       [4]     JSR   HandleTimePacket
   97:        HMI_Update();
  0106 160000       [4]     JSR   HMI_Update
   98:      }
   99:      
  100:      
  101:    
  102:      ARMCOP = copEnd;
  0109 c6aa         [1]     LDAB  #170
  010b 5b00         [2]     STAB  _ARMCOP
  010d 20e1         [3]     BRA   *-29 ;abs = 00f0
  103:    }
  104:  }
  010f 1b82         [2]     LEAS  2,SP
  105:  
  106:  //---------------------------------
  107:  //  HandlePacket
  108:  //
  109:  //  Determines what packet is recieved, then replies with the
  110:  //  coresponding answer
  111:  //  Input: none
  112:  //  Output: none
  113:  //  Conditions: none
  114:  void HandlePacket(void)
  115:  {
*** EVALUATION ***

Function: HandlePacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  116:    BOOL bACK = bFALSE;
  0000 c7           [1]     CLRB  
  0001 87           [1]     CLRA  
  0002 3b           [2]     PSHD  
  117:  
  118:    if (Packet_Command >= 0x80) // 128 in hex
  0003 f60000       [3]     LDAB  Packet
  0006 c180         [1]     CMPB  #128
  0008 250c         [3/1]   BCS   *+14 ;abs = 0016
  119:    {
  120:      bACK = bTRUE;
  000a c601         [1]     LDAB  #1
  000c 6c80         [2]     STD   0,SP
  121:      Packet_Command -= 0x80;  
  000e f60000       [3]     LDAB  Packet
  0011 c080         [1]     SUBB  #128
  0013 7b0000       [3]     STAB  Packet
  122:    }
  123:    
  124:    switch (Packet_Command)
  0016 f60000       [3]     LDAB  Packet
  0019 c11a         [1]     CMPB  #26
  001b 2277         [3/1]   BHI   *+121 ;abs = 0094
  001d c004         [1]     SUBB  #4
  001f 160000       [4]     JSR   _CASE_CHECKED_BYTE
  0022 17           DC.B  23
  0023 70           DC.B  112
  0024 17           DC.B  23
  0025 70           DC.B  112
  0026 70           DC.B  112
  0027 2b           DC.B  43
  0028 30           DC.B  48
  0029 1c           DC.B  28
  002a 35           DC.B  53
  002b 21           DC.B  33
  002c 70           DC.B  112
  002d 26           DC.B  38
  002e 70           DC.B  112
  002f 70           DC.B  112
  0030 3a           DC.B  58
  0031 3f           DC.B  63
  0032 44           DC.B  68
  0033 49           DC.B  73
  0034 4e           DC.B  78
  0035 53           DC.B  83
  0036 58           DC.B  88
  0037 5d           DC.B  93
  0038 62           DC.B  98
  0039 67           DC.B  103
  003a 6c           DC.B  108
  125:    {
  126:      case CMD_STARTUP:
  127:           Packet_CommandOK = HandleStartupPacket();
  003b 160000       [4]     JSR   HandleStartupPacket
  128:      break;
  003e 2056         [3]     BRA   *+88 ;abs = 0096
  129:      case CMD_SPECIAL:
  130:           Packet_CommandOK = HandleSpecialPacket();
  0040 160000       [4]     JSR   HandleSpecialPacket
  131:      break;
  0043 2051         [3]     BRA   *+83 ;abs = 0096
  132:      case CMD_MODCON_NB:
  133:           Packet_CommandOK = HandleNumberPacket();
  0045 160000       [4]     JSR   HandleNumberPacket
  134:      break;
  0048 204c         [3]     BRA   *+78 ;abs = 0096
  135:      case CMD_MODCON_MODE:
  136:           Packet_CommandOK = HandleModePacket();
  004a 160000       [4]     JSR   HandleModePacket
  137:      break;
  004d 2047         [3]     BRA   *+73 ;abs = 0096
  138:      case CMD_EEPROM_PROG:
  139:           Packet_CommandOK = HandleEEPROMProgramPacket();
  004f 160000       [4]     JSR   HandleEEPROMProgramPacket
  140:      break;
  0052 2042         [3]     BRA   *+68 ;abs = 0096
  141:      case CMD_EEPROM_GET:
  142:           Packet_CommandOK = HandleEEPROMGetPacket();
  0054 160000       [4]     JSR   HandleEEPROMGetPacket
  143:      break;
  0057 203d         [3]     BRA   *+63 ;abs = 0096
  144:      case CMD_MODCON_PMODE:
  145:           Packet_CommandOK = HandlePacketModePacket();
  0059 160000       [4]     JSR   HandlePacketModePacket
  146:      break;
  005c 2038         [3]     BRA   *+58 ;abs = 0096
  147:      case CMD_TEST_MODE:
  148:           HandleTestModePack();
  005e 160000       [4]     JSR   HandleTestModePack
  149:      break;
  0061 2036         [3]     BRA   *+56 ;abs = 0099
  150:      case CMD_TARRIF:
  151:           HandleTarrifPacket();
  0063 160000       [4]     JSR   HandleTarrifPacket
  152:      break;
  0066 2031         [3]     BRA   *+51 ;abs = 0099
  153:      case CMD_TIME1:
  154:           Packet_CommandOK = HandleTime1Packet();
  0068 160000       [4]     JSR   HandleTime1Packet
  155:      break;
  006b 2029         [3]     BRA   *+43 ;abs = 0096
  156:      case CMD_TIME2:
  157:           Packet_CommandOK = HandleTime2Packet();
  006d 160000       [4]     JSR   HandleTime2Packet
  158:      break;
  0070 2024         [3]     BRA   *+38 ;abs = 0096
  159:      case CMD_POWER:
  160:           Packet_CommandOK = HandlePowerPacket();
  0072 160000       [4]     JSR   HandlePowerPacket
  161:      break;
  0075 201f         [3]     BRA   *+33 ;abs = 0096
  162:      case CMD_ENERGY:
  163:           Packet_CommandOK = HandleEnergyPacket();
  0077 160000       [4]     JSR   HandleEnergyPacket
  164:      break;
  007a 201a         [3]     BRA   *+28 ;abs = 0096
  165:      case CMD_COST:
  166:           Packet_CommandOK = HandleCostPacket();
  007c 160000       [4]     JSR   HandleCostPacket
  167:      break;
  007f 2015         [3]     BRA   *+23 ;abs = 0096
  168:      case CMD_FREQUENCY:
  169:           Packet_CommandOK = HandleFrequencyPacket();
  0081 160000       [4]     JSR   HandleFrequencyPacket
  170:      break;
  0084 2010         [3]     BRA   *+18 ;abs = 0096
  171:      case CMD_VOLRMS:
  172:           Packet_CommandOK = HandleVRMS();
  0086 160000       [4]     JSR   HandleVRMS
  173:      break;
  0089 200b         [3]     BRA   *+13 ;abs = 0096
  174:      case CMD_CURRMS:
  175:           Packet_CommandOK = HandleIRMS();
  008b 160000       [4]     JSR   HandleIRMS
  176:      break;
  008e 2006         [3]     BRA   *+8 ;abs = 0096
  177:      case CMD_POWFAC:
  178:           Packet_CommandOK = HandlePFactor();
  0090 160000       [4]     JSR   HandlePFactor
  179:      break;
  0093 8f           [2]     SKIP2 
  180:      
  181:      default:
  182:           Packet_CommandOK = bFALSE;
  0094 c7           [1]     CLRB  
  0095 87           [1]     CLRA  
  0096 7c0000       [3]     STD   Packet_CommandOK
  183:      break;
  184:    }
  185:           
  186:    if (bACK && Packet_CommandOK)
  0099 ec80         [3]     LDD   0,SP
  009b 270f         [3/1]   BEQ   *+17 ;abs = 00ac
  009d fc0000       [3]     LDD   Packet_CommandOK
  00a0 270a         [3/1]   BEQ   *+12 ;abs = 00ac
  187:    {
  188:      (void)Packet_Put(Packet_Command += 0x80, Packet_Parameter1, Packet_Parameter2, Packet_Parameter3);
  00a2 f60000       [3]     LDAB  Packet
  00a5 cb80         [1]     ADDB  #128
  00a7 7b0000       [3]     STAB  Packet
  189:    }
  00aa 2007         [3]     BRA   *+9 ;abs = 00b3
  190:    else if (bACK)
  00ac ec80         [3]     LDD   0,SP
  00ae 2714         [3/1]   BEQ   *+22 ;abs = 00c4
  191:      (void)Packet_Put(Packet_Command, Packet_Parameter1, Packet_Parameter2, Packet_Parameter3);
  00b0 f60000       [3]     LDAB  Packet
  00b3 37           [2]     PSHB  
  00b4 f60000       [3]     LDAB  Packet:1
  00b7 37           [2]     PSHB  
  00b8 f60000       [3]     LDAB  Packet:3
  00bb 37           [2]     PSHB  
  00bc f60000       [3]     LDAB  Packet:2
  00bf 160000       [4]     JSR   Packet_Put
  00c2 1b83         [2]     LEAS  3,SP
  192:    
  193:  
  194:    
  195:  }
  00c4 3a           [3]     PULD  
  00c5 3d           [5]     RTS   
  196:  
  197:  //---------------------------------
  198:  //  TIE4_ISR
  199:  //
  200:  //  The ISR for ouputting Voltage and Current waves in Test mode
  201:  //  Input: none
  202:  //  Output: none
  203:  //  Conditions: none    
  204:  void interrupt 12 TIE4_ISR(void)
  205:  {
*** EVALUATION ***

Function: TIE4_ISR
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  206:    TFLG1_C4F = 1; // Clear flag to say it was done.
  0000 4c0010       [4]     BSET  _TFLG1,#16
  207:    //OS_ISREnter();
  208:    
  209:    if (Debug)
  0003 fc0420       [3]     LDD   1056
  0006 270b         [3/1]   BEQ   *+13 ;abs = 0013
  210:    {
  211:      Analog_Put(Ch1);
  0008 c7           [1]     CLRB  
  0009 87           [1]     CLRA  
  000a 160000       [4]     JSR   Analog_Put
  212:      Analog_Put(Ch2);
  000d c601         [1]     LDAB  #1
  000f 87           [1]     CLRA  
  0010 160000       [4]     JSR   Analog_Put
  213:    }
  214:    
  215:    //OS_ISRExit();
  216:  }
  0013 0b           [8]     RTI   
  217:  
  218:  //---------------------------------
  219:  //  MCCNT_ISR
  220:  //
  221:  //  The ISR for Modulus Count.
  222:  //  This will send the analog values to the pc
  223:  //  Input: none
  224:  //  Output: none
  225:  //  Conditions: none    
  226:   void interrupt 26 MCCNT_ISR(void)
  227:   {
*** EVALUATION ***

Function: MCCNT_ISR
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  0000 1b98         [2]     LEAS  -8,SP
  228:    INT32 voltage, current, i;
  229:    MCFLG_MCZF = 1; // Clear/Ack
  0002 4c0080       [4]     BSET  _MCFLG,#128
  230:    //OS_ISREnter();  
  231:    
  232:    if (Debug)
  0005 fc0420       [3]     LDD   1056
  0008 2708         [3/1]   BEQ   *+10 ;abs = 0012
  233:      PTT_PTT4 ^= 1;
  000a f60000       [3]     LDAB  _PTT
  000d c810         [1]     EORB  #16
  000f 7b0000       [3]     STAB  _PTT
  234:    
  235:    //Analog_Put(Ch1);
  236:    //Analog_Put(Ch2);
  237:    Analog_Get(Ch1);
  0012 c7           [1]     CLRB  
  0013 87           [1]     CLRA  
  0014 160000       [4]     JSR   Analog_Get
  238:    Analog_Get(Ch2);
  0017 c601         [1]     LDAB  #1
  0019 87           [1]     CLRA  
  001a 160000       [4]     JSR   Analog_Get
  239:    
  240:    // In ASYNC mode, we send only if the value has changed.
  241:    if (sControlMode == PACKET_ASYNCHRONOUS)
  001d fc0404       [3]     LDD   1028
  0020 261d         [3/1]   BNE   *+31 ;abs = 003f
  242:    {
  243:      if (Analog_Input[Ch1].OldValue.l != Analog_Input[Ch1].Value.l)
  0022 fc0000       [3]     LDD   Analog_Input:2
  0025 bc0000       [3]     CPD   Analog_Input
  0028 2705         [3/1]   BEQ   *+7 ;abs = 002f
  244:        (void)HandleAnalogValPacket(Ch1);
  002a c7           [1]     CLRB  
  002b 87           [1]     CLRA  
  002c 160000       [4]     JSR   HandleAnalogValPacket
  245:      if (Analog_Input[Ch2].OldValue.l != Analog_Input[Ch2].Value.l)
  002f fc0000       [3]     LDD   Analog_Input:12
  0032 bc0000       [3]     CPD   Analog_Input:10
  0035 2713         [3/1]   BEQ   *+21 ;abs = 004a
  246:        (void)HandleAnalogValPacket(Ch2);
  0037 c601         [1]     LDAB  #1
  0039 87           [1]     CLRA  
  003a 160000       [4]     JSR   HandleAnalogValPacket
  247:    }
  003d 200b         [3]     BRA   *+13 ;abs = 004a
  248:    // In SYNC mode, we send all the time.
  249:    else
  250:    {
  251:      (void)HandleAnalogValPacket(Ch1);
  003f c7           [1]     CLRB  
  0040 87           [1]     CLRA  
  0041 160000       [4]     JSR   HandleAnalogValPacket
  252:      (void)HandleAnalogValPacket(Ch2);
  0044 c601         [1]     LDAB  #1
  0046 87           [1]     CLRA  
  0047 160000       [4]     JSR   HandleAnalogValPacket
  253:    }
  254:    if (SampleCount >= DEM_PWRSIZE)
  004a fc0000       [3]     LDD   SampleCount
  004d 8c0010       [2]     CPD   #16
  0050 255a         [3/1]   BCS   *+92 ;abs = 00ac
  255:    {
  256:      SampleCount = 0;
  0052 c7           [1]     CLRB  
  0053 87           [1]     CLRA  
  0054 7c0000       [3]     STD   SampleCount
  257:      Math_FindEnergy(Periodic_Delay);
  0057 cc4e20       [2]     LDD   #20000
  005a 160000       [4]     JSR   Math_FindEnergy
  258:      DEM_Average_Power.l = 0;
  005d c7           [1]     CLRB  
  005e 87           [1]     CLRA  
  005f 7c0000       [3]     STD   DEM_Average_Power:2
  0062 7c0000       [3]     STD   DEM_Average_Power
  259:      
  260:      for (i = 0; i < DEM_PWRSIZE; i++)
  0065 6c82         [2]     STD   2,SP
  0067 6c80         [2]     STD   0,SP
  261:      {
  262:        DEM_Average_Power.l += DEM_Power_Array[i];
  0069 ec82         [3]     LDD   2,SP
  006b 59           [1]     LSLD  
  006c 59           [1]     LSLD  
  006d b745         [1]     TFR   D,X
  006f fc0000       [3]     LDD   DEM_Average_Power:2
  0072 e3e20000     [4]     ADDD  DEM_Power_Array:2,X
  0076 7c0000       [3]     STD   DEM_Average_Power:2
  0079 fc0000       [3]     LDD   DEM_Average_Power
  007c e9e20000     [4]     ADCB  DEM_Power_Array:1,X
  0080 a9e20000     [4]     ADCA  DEM_Power_Array,X
  0084 7c0000       [3]     STD   DEM_Average_Power
  0087 ec82         [3]     LDD   2,SP
  0089 ee80         [3]     LDX   0,SP
  008b 160000       [4]     JSR   _LINC
  008e 6c82         [2]     STD   2,SP
  0090 6e80         [2]     STX   0,SP
  0092 2dd5         [3/1]   BLT   *-41 ;abs = 0069
  0094 2605         [3/1]   BNE   *+7 ;abs = 009b
  0096 8c0010       [2]     CPD   #16
  0099 25ce         [3/1]   BCS   *-48 ;abs = 0069
  263:      }
  264:      // Find the average power over the samples
  265:      DEM_Average_Power.l = DEM_Average_Power.l >> 4;
  009b fd0000       [3]     LDY   DEM_Average_Power:2
  009e fe0000       [3]     LDX   DEM_Average_Power
  00a1 c604         [1]     LDAB  #4
  00a3 160000       [4]     JSR   _LSHRU
  00a6 7c0000       [3]     STD   DEM_Average_Power:2
  00a9 7e0000       [3]     STX   DEM_Average_Power
  266:    }
  267:      
  268:    voltage = Math_ConvertADCValue(Analog_Input[Ch1].Value.l);
  00ac fc0000       [3]     LDD   Analog_Input
  00af 160000       [4]     JSR   Math_ConvertADCValue
  00b2 160000       [4]     JSR   _ILSEXT
  00b5 6c86         [2]     STD   6,SP
  00b7 6e84         [2]     STX   4,SP
  269:    current = Math_ConvertADCValue(Analog_Input[Ch2].Value.l);
  00b9 fc0000       [3]     LDD   Analog_Input:10
  00bc 160000       [4]     JSR   Math_ConvertADCValue
  270:    DEM_Power_Array[SampleCount] = Math_FindPower(voltage, current);
  00bf ee86         [3]     LDX   6,SP
  00c1 34           [2]     PSHX  
  00c2 160000       [4]     JSR   Math_FindPower
  00c5 6c80         [2]     STD   0,SP
  00c7 fc0000       [3]     LDD   SampleCount
  00ca 59           [1]     LSLD  
  00cb 59           [1]     LSLD  
  00cc b746         [1]     TFR   D,Y
  00ce 3a           [3]     PULD  
  00cf 6cea0000     [3]     STD   DEM_Power_Array:2,Y
  00d3 6eea0000     [3]     STX   DEM_Power_Array,Y
  271:    //DEM_Average_Power.l = DEM_AvePower_Array[SampleCount];
  272:    SampleCount++;
  00d7 fe0000       [3]     LDX   SampleCount
  00da 08           [1]     INX   
  00db 7e0000       [3]     STX   SampleCount
  273:    Math_FindFrequency(Periodic_Delay);
  00de cc4e20       [2]     LDD   #20000
  00e1 160000       [4]     JSR   Math_FindFrequency
  274:    /*
  275:    Clock_MilliSeconds += 2;
  276:    if (Clock_MilliSeconds >= 1000)
  277:    {
  278:      if (Debug)
  279:      {
  280:        Clock_Hours++;
  281:        Clock_MilliSeconds -= 1000;  // 1 second has passed
  282:        
  283:        if (Clock_Hours >= 24)
  284:        {
  285:          Clock_Days++;
  286:          Clock_Hours -= 24;
  287:        }
  288:      }
  289:      
  290:      Clock_Seconds++;
  291:      Clock_Interval++;
  292:      Clock_MilliSeconds -= 1000;  // 1 second has passed
  293:      
  294:      
  295:      
  296:      if (Clock_Seconds >= 60)
  297:      {
  298:      Clock_Minutes++;               // 1 minute has passed
  299:      Clock_Seconds -= 60;
  300:      }
  301:      
  302:      if (Clock_Minutes >= 60)
  303:      {
  304:        Clock_Hours++;
  305:        Clock_Minutes -= 60;
  306:      }
  307:         
  308:      if (Clock_Hours >= 24)
  309:      {
  310:        Clock_Days++;
  311:        Clock_Hours -= 24;
  312:      }
  313:    }
  314:    
  315:    Use later when ditching Clock*/
  316:    
  317:    //OS_ISRExit();
  318:   }
  00e4 1b88         [2]     LEAS  8,SP
  00e6 0b           [8]     RTI   
  319:     
  320:   
  321:  
  322:  //---------------------------------
  323:  //  HandleStartupPacket
  324:  //
  325:  //  Creates the packet that will be in
  326:  //  response to the startup call by the PC.
  327:  //  Input: none
  328:  //  Output: none
  329:  //  Conditions: none
  330:  BOOL HandleStartupPacket(void)
  331:  {
*** EVALUATION ***

Function: HandleStartupPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  332:    if(Packet_Parameter1 != 0 || Packet_Parameter1 != 0 || Packet_Parameter3 != 0)
  0000 f60000       [3]     LDAB  Packet:1
  0003 2639         [3/1]   BNE   *+59 ;abs = 003e
  0005 f60000       [3]     LDAB  Packet:2
  0008 2702         [3/1]   BEQ   *+4 ;abs = 000c
  333:      return bFALSE;  
  000a 2032         [3]     BRA   *+52 ;abs = 003e
  334:      
  335:    
  336:    return Packet_Put(CMD_STARTUP, 0, 0, 0) && // startup takes 0 for all parameters
  000c c604         [1]     LDAB  #4
  000e 37           [2]     PSHB  
  000f c7           [1]     CLRB  
  0010 37           [2]     PSHB  
  0011 37           [2]     PSHB  
  0012 160000       [4]     JSR   Packet_Put
  0015 1b83         [2]     LEAS  3,SP
  0017 044424       [3]     TBEQ  D,*+39 ;abs = 003e
  337:           HandleSpecialPacket() &&
  001a 160000       [4]     JSR   HandleSpecialPacket
  001d 04441e       [3]     TBEQ  D,*+33 ;abs = 003e
  338:           HandleNumberPacket() &&
  0020 160000       [4]     JSR   HandleNumberPacket
  0023 044418       [3]     TBEQ  D,*+27 ;abs = 003e
  339:           HandleModePacket() &&
  0026 160000       [4]     JSR   HandleModePacket
  0029 044412       [3]     TBEQ  D,*+21 ;abs = 003e
  340:           Packet_Put( CMD_MODCON_PMODE, 1, (UINT8)sControlMode, 0 );
  002c cc010a       [2]     LDD   #266
  002f 37           [2]     PSHB  
  0030 36           [2]     PSHA  
  0031 f60405       [3]     LDAB  1029
  0034 37           [2]     PSHB  
  0035 c7           [1]     CLRB  
  0036 160000       [4]     JSR   Packet_Put
  0039 1b83         [2]     LEAS  3,SP
  003b 046402       [3]     TBNE  D,*+5 ;abs = 0040
  003e c7           [1]     CLRB  
  003f 8f           [2]     SKIP2 
  0040 c601         [1]     LDAB  #1
  0042 87           [1]     CLRA  
  341:  }
  0043 3d           [5]     RTS   
  342:  
  343:  //---------------------------------
  344:  //  HandleSpecialPacket
  345:  //
  346:  //  Creates the packet that will be in
  347:  //  response to the special call by the PC.
  348:  //  It responds with the ModCon Version.
  349:  //  Input: none
  350:  //  Output: none
  351:  //  Conditions: none
  352:  BOOL HandleSpecialPacket(void)
  353:  {
*** EVALUATION ***

Function: HandleSpecialPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  354:    switch (Packet_Parameter1)
  0000 f60000       [3]     LDAB  Packet:1
  0003 c164         [1]     CMPB  #100
  0005 2610         [3/1]   BNE   *+18 ;abs = 0017
  355:    {
  356:      case 'v':
  357:        return Packet_Put(CMD_SPECIAL, 'v', MAJOR_VERSION, MINOR_VERSION);
  358:      break;
  359:      case 'd':
  360:        EEPROM_Write16(&Debug, Debug ^ 1); // Set debug
  0007 cc0420       [2]     LDD   #1056
  000a 3b           [2]     PSHD  
  000b fc0420       [3]     LDD   1056
  000e c801         [1]     EORB  #1
  0010 160000       [4]     JSR   EEPROM_Write16
  0013 3a           [3]     PULD  
  361:        return HandleTimePacket();
  0014 060000       [3]     JMP   HandleTimePacket
  362:      break;
  363:    }
  364:    
  365:    // If called by Startup Packet
  366:    return Packet_Put(CMD_SPECIAL, 'v', MAJOR_VERSION, MINOR_VERSION);
  0017 cc7609       [2]     LDD   #30217
  001a 37           [2]     PSHB  
  001b 36           [2]     PSHA  
  001c c601         [1]     LDAB  #1
  001e 37           [2]     PSHB  
  001f c7           [1]     CLRB  
  0020 160000       [4]     JSR   Packet_Put
  0023 1b83         [2]     LEAS  3,SP
  367:  }
  0025 3d           [5]     RTS   
  368:  
  369:  //---------------------------------
  370:  //  HandleNumberPacket
  371:  //
  372:  //  Creates the packet that will be in
  373:  //  response to the ModCon number call by the PC.
  374:  //  It responds with the last five digits of our
  375:  //  student number.
  376:  //  Input: none
  377:  //  Output: none
  378:  //  Conditions: none
  379:  BOOL HandleNumberPacket(void)
  380:  {
*** EVALUATION ***

Function: HandleNumberPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
  381:    TUINT16 NbModCon;
  382:    if (Packet_Parameter1 == 2)
  0001 f60000       [3]     LDAB  Packet:1
  0004 c102         [1]     CMPB  #2
  0006 260c         [3/1]   BNE   *+14 ;abs = 0014
  383:    {
  384:      NbModCon.s.Lo = Packet_Parameter2;
  0008 f60000       [3]     LDAB  Packet:3
  000b 6b81         [2]     STAB  1,SP
  385:      NbModCon.s.Hi = Packet_Parameter3;
  000d f60000       [3]     LDAB  Packet:2
  0010 6b80         [2]     STAB  0,SP
  386:    }
  0012 2005         [3]     BRA   *+7 ;abs = 0019
  387:    else
  388:      NbModCon.l = sModConNb;
  0014 fc0400       [3]     LDD   1024
  0017 6c80         [2]     STD   0,SP
  389:    
  390:    return Packet_Put(CMD_MODCON_NB, 1, NbModCon.s.Lo, NbModCon.s.Hi);
  0019 cc010b       [2]     LDD   #267
  001c 37           [2]     PSHB  
  001d 36           [2]     PSHA  
  001e e683         [3]     LDAB  3,SP
  0020 37           [2]     PSHB  
  0021 e683         [3]     LDAB  3,SP
  0023 160000       [4]     JSR   Packet_Put
  0026 1b83         [2]     LEAS  3,SP
  391:    
  392:  }
  0028 30           [3]     PULX  
  0029 3d           [5]     RTS   
  393:  
  394:  //---------------------------------
  395:  //  HandleModePacket
  396:  //
  397:  //  Creates the packet that will be in
  398:  //  response to the ModCon mode call by the PC.
  399:  //  It responds with the modcon mode
  400:  //  Input: none
  401:  //  Output: none
  402:  //  Conditions: none
  403:  BOOL HandleModePacket(void)
  404:  {
*** EVALUATION ***

Function: HandleModePacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  405:    TUINT16 mode;
  406:    mode.l = sModConMode;
  0000 fc0402       [3]     LDD   1026
  0003 3b           [2]     PSHD  
  407:    return Packet_Put(CMD_MODCON_MODE, 1, mode.s.Lo, mode.s.Hi);
  0004 cc010d       [2]     LDD   #269
  0007 37           [2]     PSHB  
  0008 36           [2]     PSHA  
  0009 e683         [3]     LDAB  3,SP
  000b 37           [2]     PSHB  
  000c e683         [3]     LDAB  3,SP
  000e 160000       [4]     JSR   Packet_Put
  0011 1b83         [2]     LEAS  3,SP
  408:  }
  0013 30           [3]     PULX  
  0014 3d           [5]     RTS   
  409:  
  410:  //---------------------------------
  411:  //  HandleEEPROMProgramPacket
  412:  //
  413:  //  Creates the packet that will be in
  414:  //  response to the ModCon EEPROM Programming call by the PC.
  415:  //  It responds by writing the data recieved
  416:  //  Input: none
  417:  //  Output: none
  418:  //  Conditions: none
  419:  BOOL HandleEEPROMProgramPacket(void)
  420:  {
*** EVALUATION ***

Function: HandleEEPROMProgramPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
  421:    TUINT16 address;
  422:    address.s.Lo = Packet_Parameter1;    //LSB
  0001 f60000       [3]     LDAB  Packet:1
  0004 6b81         [2]     STAB  1,SP
  423:    address.s.Hi = Packet_Parameter2;    //MSB
  0006 f60000       [3]     LDAB  Packet:3
  0009 6b80         [2]     STAB  0,SP
  424:    
  425:    if (address.s.Hi == 10 && address.s.Lo == 0)
  000b c10a         [1]     CMPB  #10
  000d 2609         [3/1]   BNE   *+11 ;abs = 0018
  000f e681         [3]     LDAB  1,SP
  0011 2605         [3/1]   BNE   *+7 ;abs = 0018
  426:      return EEPROM_Erase();
  0013 160000       [4]     JSR   EEPROM_Erase
  0016 200b         [3]     BRA   *+13 ;abs = 0023
  427:  
  428:    return EEPROM_Write8( (volatile UINT8 *)address.l, Packet_Parameter3 ); 
  0018 ec80         [3]     LDD   0,SP
  001a 3b           [2]     PSHD  
  001b f60000       [3]     LDAB  Packet:2
  001e 160000       [4]     JSR   EEPROM_Write8
  0021 1b82         [2]     LEAS  2,SP
  429:  }
  0023 30           [3]     PULX  
  0024 3d           [5]     RTS   
  430:  
  431:  //---------------------------------
  432:  //  HandleEEPROMGetPacket
  433:  //
  434:  //  Creates the packet that will be in
  435:  //  response to the ModCon mode call by the PC.
  436:  //  It responds with the modcon mode
  437:  //  Input: none
  438:  //  Output: none
  439:  //  Conditions: none
  440:  BOOL HandleEEPROMGetPacket(void)
  441:  {
*** EVALUATION ***

Function: HandleEEPROMGetPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
  442:    TUINT16 address;
  443:    address.s.Lo = Packet_Parameter1;
  0001 f60000       [3]     LDAB  Packet:1
  0004 6b81         [2]     STAB  1,SP
  444:    address.s.Hi = Packet_Parameter2;
  0006 b60000       [3]     LDAA  Packet:3
  0009 6a80         [2]     STAA  0,SP
  445:    
  446:    if ( (Packet_Parameter2 > 0x0F) || (Packet_Parameter2 < 0x04) )
  000b 810f         [1]     CMPA  #15
  000d 2204         [3/1]   BHI   *+6 ;abs = 0013
  000f 8104         [1]     CMPA  #4
  0011 2404         [3/1]   BCC   *+6 ;abs = 0017
  447:      return bFALSE;
  0013 c7           [1]     CLRB  
  0014 87           [1]     CLRA  
  0015 2011         [3]     BRA   *+19 ;abs = 0028
  448:    
  449:    return Packet_Put( CMD_EEPROM_GET, Packet_Parameter1, Packet_Parameter2, _EB(address.l) ); // cmd, lsb, msb, data
  0017 c608         [1]     LDAB  #8
  0019 37           [2]     PSHB  
  001a f60000       [3]     LDAB  Packet:1
  001d 37           [2]     PSHB  
  001e 36           [2]     PSHA  
  001f ee83         [3]     LDX   3,SP
  0021 e600         [3]     LDAB  0,X
  0023 160000       [4]     JSR   Packet_Put
  0026 1b83         [2]     LEAS  3,SP
  450:  }
  0028 30           [3]     PULX  
  0029 3d           [5]     RTS   
  451:  
  452:  //---------------------------------
  453:  //  HandleTimePacket
  454:  //
  455:  //  Creates the packet that will be in
  456:  //  response to the ModCon time call by the PC.
  457:  //  It responds with the modcon time
  458:  //  Input: none
  459:  //  Output: none
  460:  //  Conditions: none
  461:  BOOL HandleTimePacket(void)
  462:  {
*** EVALUATION ***

Function: HandleTimePacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  463:    // Intervals : 'i', Seconds, Minutes
  464:    return Packet_Put(CMD_MODCON_TIME, 'i', Clock_Seconds, Clock_Minutes);
  0000 cc690c       [2]     LDD   #26892
  0003 37           [2]     PSHB  
  0004 36           [2]     PSHA  
  0005 f60000       [3]     LDAB  Clock_Seconds
  0008 37           [2]     PSHB  
  0009 f60000       [3]     LDAB  Clock_Minutes
  000c 160000       [4]     JSR   Packet_Put
  000f 1b83         [2]     LEAS  3,SP
  465:  }
  0011 3d           [5]     RTS   
  466:  
  467:  //---------------------------------
  468:  //  HandlePacketModePacket
  469:  //
  470:  //  Creates the packet that will be in
  471:  //  response to the ModCon Packet Mode call by the PC.
  472:  //  It responds with the Packet Mode
  473:  //  Input: none
  474:  //  Output: none
  475:  //  Conditions: none
  476:  BOOL HandlePacketModePacket(void)
  477:  {
*** EVALUATION ***

Function: HandlePacketModePacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  478:    // p1: 2 = set, 1 = get
  479:    // p2: 0 = async, 1 = sync
  480:    // p3: 0
  481:    if (Packet_Parameter1 == 2)
  0000 f60000       [3]     LDAB  Packet:1
  0003 c102         [1]     CMPB  #2
  0005 260e         [3/1]   BNE   *+16 ;abs = 0015
  482:      return EEPROM_Write16(&sControlMode, Packet_Parameter2);
  0007 cc0404       [2]     LDD   #1028
  000a 3b           [2]     PSHD  
  000b f60000       [3]     LDAB  Packet:3
  000e 87           [1]     CLRA  
  000f 160000       [4]     JSR   EEPROM_Write16
  0012 1b82         [2]     LEAS  2,SP
  0014 3d           [5]     RTS   
  483:    if (Packet_Parameter1 == 1)
  0015 04210f       [3]     DBNE  B,*+18 ;abs = 0027
  484:      return Packet_Put( CMD_MODCON_PMODE, 1, (UINT8)sControlMode, 0 ); // cmd, 1, mode, 0;  
  0018 cc010a       [2]     LDD   #266
  001b 37           [2]     PSHB  
  001c 36           [2]     PSHA  
  001d f60405       [3]     LDAB  1029
  0020 37           [2]     PSHB  
  0021 c7           [1]     CLRB  
  0022 160000       [4]     JSR   Packet_Put
  0025 1b83         [2]     LEAS  3,SP
  485:  }
  0027 3d           [5]     RTS   
  486:  
  487:  //---------------------------------
  488:  //  HandleAnalogValPacket
  489:  //
  490:  //  Creates the packet that will be in
  491:  //  response to the ModCon Analog Value call by the PC.
  492:  //  It responds with the current Analog Value
  493:  //  Input: none
  494:  //  Output: none
  495:  //  Conditions: none
  496:  BOOL HandleAnalogValPacket(const TChannelNb channelNb)
  497:  {
*** EVALUATION ***

Function: HandleAnalogValPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
  498:    // cmd, channel, lsb, msb
  499:    return Packet_Put(CMD_ANALOG_VALUE, (UINT8)channelNb, Analog_Input[channelNb].Value.s.Lo, Analog_Input[channelNb].Value.s.Hi);  
  0001 c650         [1]     LDAB  #80
  0003 37           [2]     PSHB  
  0004 a682         [3]     LDAA  2,SP
  0006 36           [2]     PSHA  
  0007 c60a         [1]     LDAB  #10
  0009 87           [1]     CLRA  
  000a ed82         [3]     LDY   2,SP
  000c 13           [3]     EMUL  
  000d b745         [1]     TFR   D,X
  000f e6e20000     [4]     LDAB  Analog_Input:1,X
  0013 37           [2]     PSHB  
  0014 e6e20000     [4]     LDAB  Analog_Input,X
  0018 160000       [4]     JSR   Packet_Put
  001b 1b83         [2]     LEAS  3,SP
  500:  }
  001d 30           [3]     PULX  
  001e 3d           [5]     RTS   
  501:  
  502:  //---------------------------------
  503:  //  HandleTestModePack
  504:  //
  505:  //  Toggles test mode
  506:  //  Input: none
  507:  //  Output: none
  508:  //  Conditions: none
  509:  void HandleTestModePack(void)
  510:  {
*** EVALUATION ***

Function: HandleTestModePack
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  511:    if(Packet_Parameter1)
  0000 f60000       [3]     LDAB  Packet:1
  0003 2708         [3/1]   BEQ   *+10 ;abs = 000d
  512:      EEPROM_Write16(&Debug, 1);
  0005 cc0420       [2]     LDD   #1056
  0008 3b           [2]     PSHD  
  0009 c601         [1]     LDAB  #1
  000b 2005         [3]     BRA   *+7 ;abs = 0012
  513:    else
  514:      EEPROM_Write16(&Debug, 0);
  000d cc0420       [2]     LDD   #1056
  0010 3b           [2]     PSHD  
  0011 c7           [1]     CLRB  
  0012 87           [1]     CLRA  
  0013 160000       [4]     JSR   EEPROM_Write16
  0016 3a           [3]     PULD  
  515:  }
  0017 3d           [5]     RTS   
  516:  
  517:  //---------------------------------
  518:  //  HandleTarrifPacket
  519:  //
  520:  //  Sets the tarrif type depending
  521:  //  Input: none
  522:  //  Output: none
  523:  //  Conditions: none
  524:  void HandleTarrifPacket(void)
  525:  {
*** EVALUATION ***

Function: HandleTarrifPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  526:    switch(Packet_Parameter1)
  0000 f60000       [3]     LDAB  Packet:1
  0003 c103         [1]     CMPB  #3
  0005 2226         [3/1]   BHI   *+40 ;abs = 002d
  0007 53           [1]     DECB  
  0008 87           [1]     CLRA  
  0009 160000       [4]     JSR   _CASE_CHECKED_BYTE
  000c 03           DC.B  3
  000d 1f           DC.B  31
  000e 03           DC.B  3
  000f 0b           DC.B  11
  0010 13           DC.B  19
  527:    {
  528:      case 1:
  529:        //DEM_Tarrif = sT1OffPeak;
  530:        (void)EEPROM_Write16(&sTarrifMode, 1);
  0011 cc0460       [2]     LDD   #1120
  0014 3b           [2]     PSHD  
  0015 c601         [1]     LDAB  #1
  531:      break;
  0017 200e         [3]     BRA   *+16 ;abs = 0027
  532:      case 2:
  533:        //DEM_Tarrif = sT2NonTOU;
  534:        (void)EEPROM_Write16(&sTarrifMode, 2);
  0019 cc0460       [2]     LDD   #1120
  001c 3b           [2]     PSHD  
  001d c602         [1]     LDAB  #2
  535:      break;
  001f 2006         [3]     BRA   *+8 ;abs = 0027
  536:      case 3:
  537:        //DEM_Tarrif = sT3NonTOU;
  538:        (void)EEPROM_Write16(&sTarrifMode, 3);
  0021 cc0460       [2]     LDD   #1120
  0024 3b           [2]     PSHD  
  0025 c603         [1]     LDAB  #3
  0027 87           [1]     CLRA  
  0028 160000       [4]     JSR   EEPROM_Write16
  002b 1b82         [2]     LEAS  2,SP
  539:      break;
  540:    }
  541:  }
  002d 3d           [5]     RTS   
  542:  
  543:  //---------------------------------
  544:  //  HandleTime1Packet
  545:  //
  546:  //  Creates the packet that will respond with the
  547:  //  seconds and minutes 
  548:  //  OR
  549:  //  sets the seconds and minutes based on the packet
  550:  //  Input: none
  551:  //  Output: none
  552:  //  Conditions: none
  553:  BOOL HandleTime1Packet(void)
  554:  {
*** EVALUATION ***

Function: HandleTime1Packet
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  555:    if (Packet_Parameter3 == 0)
  0000 f60000       [3]     LDAB  Packet:2
  0003 2612         [3/1]   BNE   *+20 ;abs = 0017
  556:      return Packet_Put(CMD_TIME1, (UINT8)Clock_Seconds, (UINT8)Clock_Minutes, 0);
  0005 c612         [1]     LDAB  #18
  0007 37           [2]     PSHB  
  0008 b60000       [3]     LDAA  Clock_Seconds
  000b 36           [2]     PSHA  
  000c b60000       [3]     LDAA  Clock_Minutes
  000f 36           [2]     PSHA  
  0010 c7           [1]     CLRB  
  0011 160000       [4]     JSR   Packet_Put
  0014 1b83         [2]     LEAS  3,SP
  0016 3d           [5]     RTS   
  557:    else
  558:    {
  559:      
  560:      Clock_Seconds = Packet_Parameter1;
  0017 f60000       [3]     LDAB  Packet:1
  001a 7b0000       [3]     STAB  Clock_Seconds
  561:      Clock_Minutes = Packet_Parameter2;
  001d f60000       [3]     LDAB  Packet:3
  0020 7b0000       [3]     STAB  Clock_Minutes
  562:    }
  563:    
  564:  }
  0023 3d           [5]     RTS   
  565:  
  566:  //---------------------------------
  567:  //  HandleTime2Packet
  568:  //
  569:  //  Creates the packet that will respond with the
  570:  //  hours and dayss 
  571:  //  OR
  572:  //  sets the hours and days based on the packet
  573:  //  Input: none
  574:  //  Output: none
  575:  //  Conditions: none
  576:  BOOL HandleTime2Packet(void)
  577:  {
*** EVALUATION ***

Function: HandleTime2Packet
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  578:    if (Packet_Parameter3 == 0)
  0000 f60000       [3]     LDAB  Packet:2
  0003 2612         [3/1]   BNE   *+20 ;abs = 0017
  579:      return Packet_Put(CMD_TIME2, (UINT8)Clock_Hours, (UINT8)Clock_Days, 0);
  0005 c613         [1]     LDAB  #19
  0007 37           [2]     PSHB  
  0008 b60000       [3]     LDAA  Clock_Hours
  000b 36           [2]     PSHA  
  000c b60000       [3]     LDAA  Clock_Days
  000f 36           [2]     PSHA  
  0010 c7           [1]     CLRB  
  0011 160000       [4]     JSR   Packet_Put
  0014 1b83         [2]     LEAS  3,SP
  0016 3d           [5]     RTS   
  580:    else
  581:    {
  582:      Clock_Hours = Packet_Parameter1;
  0017 f60000       [3]     LDAB  Packet:1
  001a 7b0000       [3]     STAB  Clock_Hours
  583:      Clock_Days  = Packet_Parameter2;
  001d f60000       [3]     LDAB  Packet:3
  0020 7b0000       [3]     STAB  Clock_Days
  584:    }
  585:  }
  0023 3d           [5]     RTS   
  586:  
  587:  //---------------------------------
  588:  //  HandlePowerPacket
  589:  //
  590:  //  Creates the packet that will return
  591:  //  the current average power
  592:  //  Input: none
  593:  //  Output: none
  594:  //  Conditions: none
  595:  BOOL HandlePowerPacket(void)
  596:  {
*** EVALUATION ***

Function: HandlePowerPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  597:    TUINT16 power;
  598:    power.l = DEM_Average_Power.l >> 8;
  599:    return Packet_Put(CMD_POWER, DEM_Average_Power.s.Lo, DEM_Average_Power.s.Hi, 0);
  0000 c614         [1]     LDAB  #20
  0002 37           [2]     PSHB  
  0003 b60000       [3]     LDAA  DEM_Average_Power:3
  0006 36           [2]     PSHA  
  0007 b60000       [3]     LDAA  DEM_Average_Power:1
  000a 36           [2]     PSHA  
  000b c7           [1]     CLRB  
  000c 160000       [4]     JSR   Packet_Put
  000f 1b83         [2]     LEAS  3,SP
  600:  }
  0011 3d           [5]     RTS   
  601:  
  602:  //---------------------------------
  603:  //  HandleEnergyPacket
  604:  //
  605:  //  Creates the packet that will return
  606:  //  the current total energy
  607:  //  Input: none
  608:  //  Output: none
  609:  //  Conditions: none
  610:  BOOL HandleEnergyPacket(void)
  611:  {
*** EVALUATION ***

Function: HandleEnergyPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  612:    return Packet_Put(CMD_POWER, (UINT8)DEM_Total_Energy.s.Lo, (UINT8)DEM_Total_Energy.s.Hi, 0);
  0000 c614         [1]     LDAB  #20
  0002 37           [2]     PSHB  
  0003 b60000       [3]     LDAA  DEM_Total_Energy:3
  0006 36           [2]     PSHA  
  0007 b60000       [3]     LDAA  DEM_Total_Energy:1
  000a 36           [2]     PSHA  
  000b c7           [1]     CLRB  
  000c 160000       [4]     JSR   Packet_Put
  000f 1b83         [2]     LEAS  3,SP
  613:  }
  0011 3d           [5]     RTS   
  614:  
  615:  //---------------------------------
  616:  //  HandleCostPacket
  617:  //
  618:  //  Creates the packet that will return
  619:  //  the current total cost
  620:  //  Input: none
  621:  //  Output: none
  622:  //  Conditions: none
  623:  BOOL HandleCostPacket(void)
  624:  {
*** EVALUATION ***

Function: HandleCostPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  625:    return Packet_Put(CMD_COST, (UINT8)Math_FromQN(DEM_Total_Cost, qRight, CostBase), (UINT8)Math_FromQN(DEM_Total_Cost, qLeft, 9), CostBase);
  0000 c616         [1]     LDAB  #22
  0002 37           [2]     PSHB  
  0003 fc0000       [3]     LDD   DEM_Total_Cost:2
  0006 3b           [2]     PSHD  
  0007 fc0000       [3]     LDD   DEM_Total_Cost
  000a 3b           [2]     PSHD  
  000b c601         [1]     LDAB  #1
  000d 87           [1]     CLRA  
  000e 3b           [2]     PSHD  
  000f c60a         [1]     LDAB  #10
  0011 160000       [4]     JSR   Math_FromQN
  0014 6ba4         [2]     STAB  5,+SP
  0016 fc0000       [3]     LDD   DEM_Total_Cost:2
  0019 3b           [2]     PSHD  
  001a fc0000       [3]     LDD   DEM_Total_Cost
  001d 3b           [2]     PSHD  
  001e c7           [1]     CLRB  
  001f 87           [1]     CLRA  
  0020 3b           [2]     PSHD  
  0021 c609         [1]     LDAB  #9
  0023 160000       [4]     JSR   Math_FromQN
  0026 6ba4         [2]     STAB  5,+SP
  0028 c60a         [1]     LDAB  #10
  002a 160000       [4]     JSR   Packet_Put
  002d 1b83         [2]     LEAS  3,SP
  626:  }
  002f 3d           [5]     RTS   
  627:  
  628:  //---------------------------------
  629:  //  HandleFrequencyPacket
  630:  //
  631:  //  Creates the packet that will return
  632:  //  the current frequency
  633:  //  Input: none
  634:  //  Output: none
  635:  //  Conditions: none
  636:  BOOL HandleFrequencyPacket(void)
  637:  {
*** EVALUATION ***

Function: HandleFrequencyPacket
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  638:    //TUINT16 tempFrequency;
  639:    Math_FindFrequency(Periodic_Delay);
  0000 cc4e20       [2]     LDD   #20000
  0003 160000       [4]     JSR   Math_FindFrequency
  640:    return Packet_Put(CMD_FREQUENCY, DEM_Frequency.s.Lo, DEM_Frequency.s.Hi, 0);
  0006 c617         [1]     LDAB  #23
  0008 37           [2]     PSHB  
  0009 b60000       [3]     LDAA  DEM_Frequency:1
  000c 36           [2]     PSHA  
  000d b60000       [3]     LDAA  DEM_Frequency
  0010 36           [2]     PSHA  
  0011 c7           [1]     CLRB  
  0012 160000       [4]     JSR   Packet_Put
  0015 1b83         [2]     LEAS  3,SP
  641:  }
  0017 3d           [5]     RTS   
  642:  
  643:  //---------------------------------
  644:  //  HandleVRMS
  645:  //
  646:  //  Creates the packet that will return
  647:  //  the VRMS value
  648:  //  Input: none
  649:  //  Output: none
  650:  //  Conditions: none
  651:  BOOL HandleVRMS(void)
  652:  {
*** EVALUATION ***

Function: HandleVRMS
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  653:    return Packet_Put(CMD_VOLRMS, DEM_VRMS.s.Lo, DEM_VRMS.s.Hi, 0);
  0000 c618         [1]     LDAB  #24
  0002 37           [2]     PSHB  
  0003 b60000       [3]     LDAA  DEM_VRMS:1
  0006 36           [2]     PSHA  
  0007 b60000       [3]     LDAA  DEM_VRMS
  000a 36           [2]     PSHA  
  000b c7           [1]     CLRB  
  000c 160000       [4]     JSR   Packet_Put
  000f 1b83         [2]     LEAS  3,SP
  654:  }
  0011 3d           [5]     RTS   
  655:  
  656:  //---------------------------------
  657:  //  HandleIRMS
  658:  //
  659:  //  Creates the packet that will return
  660:  //  the IRMS value
  661:  //  Input: none
  662:  //  Output: none
  663:  //  Conditions: none
  664:  BOOL HandleIRMS(void)
  665:  {
*** EVALUATION ***

Function: HandleIRMS
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  666:    return Packet_Put(CMD_CURRMS, DEM_IRMS.s.Lo, DEM_IRMS.s.Hi, 0);
  0000 c619         [1]     LDAB  #25
  0002 37           [2]     PSHB  
  0003 b60000       [3]     LDAA  DEM_IRMS:1
  0006 36           [2]     PSHA  
  0007 b60000       [3]     LDAA  DEM_IRMS
  000a 36           [2]     PSHA  
  000b c7           [1]     CLRB  
  000c 160000       [4]     JSR   Packet_Put
  000f 1b83         [2]     LEAS  3,SP
  667:  }
  0011 3d           [5]     RTS   
  668:  
  669:  //---------------------------------
  670:  //  HandlePFactor
  671:  //
  672:  //  Creates the packet that will return
  673:  //  the power factor
  674:  //  Input: none
  675:  //  Output: none
  676:  //  Conditions: none
  677:  BOOL HandlePFactor(void)
  678:  {
*** EVALUATION ***

Function: HandlePFactor
Source  : F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources\main.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\prm;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\cmd;F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Env"TEXTPATH=F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\bin" -Lasm=%n.lst -Ms -ObjN="F:\Dropbox\S11\Embedded Software\Assignments\demdanruto\Project\Project_Data\ModCon_Board\ObjectCode\main.c.o" -WmsgSd1106 -WmsgSd5703

  679:    return Packet_Put(CMD_POWFAC, 0, 0, 0);
  0000 c61a         [1]     LDAB  #26
  0002 37           [2]     PSHB  
  0003 c7           [1]     CLRB  
  0004 37           [2]     PSHB  
  0005 37           [2]     PSHB  
  0006 160000       [4]     JSR   Packet_Put
  0009 1b83         [2]     LEAS  3,SP
  680:  }
  000b 3d           [5]     RTS   
