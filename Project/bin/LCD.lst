*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.38 Build 9056, Feb 26 2009

    1:  // ----------------------------------------
    2:  // Filename: LCD.c
    3:  // Description: Lab 5
    4:  //  Implements the Clover LCD functions to control
    5:  //  backlighting, display and setup
    6:  // Author: Danny Sok
    7:  //         Edward Khou
    8:  // Date Created: 20-10-2011
    9:  // Date Last Modified: 2-11-2011
   10:  
   11:  #include "LCD.h"
   12:  // LCD Function Settings
   13:  static UINT8 const SET_TEXT_HOME       = 0b01000000;
   14:  static UINT8 const SET_TEXTAREA        = 0b01000001;
   15:  static UINT8 const SET_CURSOR          = 0b00100001;
   16:  static UINT8 const SET_RAM             = 0b00100100;
   17:  static UINT8 const DISPLAY_MODE        = 0b10010100; // Text on, Graphics off, Curson off, Blink off
   18:  // 100101XX
   19:  // 1001XX11
   20:  static UINT8 const TXT_GFX_ON          = 0b10011000;
   21:  static UINT8 const SET_ONE_L           = 0b10100000;
   22:  static UINT8 const SET_TWO_L           = 0b10100001;
   23:  static UINT8 const SET_THREE_L         = 0b10100010;
   24:  static UINT8 const SET_FOUR_L          = 0b10100011;
   25:  static UINT8 const DATA_WRITE          = 0b11000000;
   26:  static UINT8 const DATA_READ           = 0b11000011;
   27:  static UINT8 const LCD_CLEAR           = 0b10010000;
   28:  static UINT8 const MODE_SET            = 0b10000001; // EXOR && Internal CG ROM
   29:  static UINT8 const CURSOR_SELECT       = 0b10100111; // 8-line cursor
   30:  
   31:  static UINT8 const DISPLAY_OFF         = 0b10010000;
   32:  
   33:  static UINT8 const COLUMN_SIZE         = 16;
   34:  
   35:  
   36:  static UINT16 const Timer_Ch5_Delay    = 65535;     // ~20ms
   37:  
   38:  // ----------------------------------------
   39:  // LCD_Setup
   40:  // 
   41:  // Sets up the LCD
   42:  // Input:
   43:  //   
   44:  // Output:
   45:  //   none
   46:  // Conditions:
   47:  //  none
   48:  void LCD_Setup(void)
   49:  {
*** EVALUATION ***

Function: LCD_Setup
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 1b92         [2]     LEAS  -14,SP
   50:    TTimerSetup timerSetup;
   51:    //RESET
   52:    LCDF_RST = 0;
  0002 4d0008       [4]     BCLR  _PORTAB:1,#8
   53:    
   54:    asm nop;
  0005 a7           [1]     NOP   
   55:    asm nop;
  0006 a7           [1]     NOP   
   56:    asm nop;   
  0007 a7           [1]     NOP   
   57:    asm nop;
  0008 a7           [1]     NOP   
   58:    asm nop;
  0009 a7           [1]     NOP   
   59:    asm nop;
  000a a7           [1]     NOP   
   60:    
   61:    LCDF_RST = 1;
  000b 4c0008       [4]     BSET  _PORTAB:1,#8
   62:  
   63:    
   64:    //DDRA = Input;
   65:    
   66:    LCD_SetFunction(BacklightON, (UINT8)sLCDContrast);
  000e c601         [1]     LDAB  #1
  0010 87           [1]     CLRA  
  0011 3b           [2]     PSHD  
  0012 f60441       [3]     LDAB  1089
  0015 160000       [4]     JSR   LCD_SetFunction
  0018 3a           [3]     PULD  
   67:  
   68:    // Default settings
   69:    LCDF_WR = 1;
  0019 4c0001       [4]     BSET  _PORTAB:1,#1
   70:    LCDF_RD = 1; 
  001c 4c0002       [4]     BSET  _PORTAB:1,#2
   71:    
   72:    // Set address pointer to home address
   73:    SetRAMAddress(0);
  001f c7           [1]     CLRB  
  0020 87           [1]     CLRA  
  0021 160000       [4]     JSR   SetRAMAddress
   74:    
   75:    LCD_CursorHome();
  0024 160000       [4]     JSR   LCD_CursorHome
   76:    
   77:    LCD_TextHome();
  0027 160000       [4]     JSR   LCD_TextHome
   78:    LCD_TextArea(COLUMN_SIZE);
  002a c610         [1]     LDAB  #16
  002c 160000       [4]     JSR   LCD_TextArea
   79:  
   80:    // Set mode (EXOR mode and internal CG ROM)
   81:    WriteCommand(MODE_SET);
  002f c681         [1]     LDAB  #129
  0031 160000       [4]     JSR   WriteCommand
   82:  
   83:    // Set display mode (Cursor ON, blink ON, Text ON, graphic OFF)
   84:    WriteCommand(DISPLAY_MODE);
  0034 c694         [1]     LDAB  #148
  0036 160000       [4]     JSR   WriteCommand
   85:    
   86:    // Cursor pattern select
   87:    WriteCommand(CURSOR_SELECT);
  0039 c6a7         [1]     LDAB  #167
  003b 160000       [4]     JSR   WriteCommand
   88:    
   89:    LCD_Clear();
  003e 160000       [4]     JSR   LCD_Clear
   90:     
   91:    // Setup Channel 5 for Output Compare of LCD Status Checks
   92:    timerSetup.outputCompare = bTRUE;
  0041 c601         [1]     LDAB  #1
  0043 87           [1]     CLRA  
  0044 6c82         [2]     STD   2,SP
   93:    timerSetup.outputAction = TIMER_OUTPUT_DISCONNECT;
  0046 6985         [2]     CLR   5,SP
  0048 6984         [2]     CLR   4,SP
   94:    timerSetup.inputDetection = TIMER_INPUT_OFF;
  004a 6987         [2]     CLR   7,SP
  004c 6986         [2]     CLR   6,SP
   95:    timerSetup.toggleOnOverflow = bFALSE;
  004e 6989         [2]     CLR   9,SP
  0050 6988         [2]     CLR   8,SP
   96:    timerSetup.interruptEnable = bFALSE;
  0052 698b         [2]     CLR   11,SP
  0054 698a         [2]     CLR   10,SP
   97:  
   98:    // Setup and Enable the timer.  
   99:    Timer_Init(TIMER_Ch5, &timerSetup);
  0056 c605         [1]     LDAB  #5
  0058 3b           [2]     PSHD  
  0059 1a84         [2]     LEAX  4,SP
  005b b7c5         [1]     EXG   D,X
  005d 6c82         [2]     STD   2,SP
  005f 160000       [4]     JSR   Timer_Init
  100:    Timer_Set(TIMER_Ch5, Timer_Ch5_Delay);
  0062 c605         [1]     LDAB  #5
  0064 87           [1]     CLRA  
  0065 6c80         [2]     STD   0,SP
  0067 c6ff         [1]     LDAB  #255
  0069 43           [1]     DECA  
  006a 160000       [4]     JSR   Timer_Set
  101:    Timer_Enable(TIMER_Ch5, bTRUE);
  006d c605         [1]     LDAB  #5
  006f 87           [1]     CLRA  
  0070 6c80         [2]     STD   0,SP
  0072 c601         [1]     LDAB  #1
  0074 160000       [4]     JSR   Timer_Enable
  102:    
  103:    Timer_Init(TIMER_Ch6, &timerSetup);
  0077 c606         [1]     LDAB  #6
  0079 87           [1]     CLRA  
  007a 6c80         [2]     STD   0,SP
  007c ec82         [3]     LDD   2,SP
  007e 160000       [4]     JSR   Timer_Init
  104:    Timer_Set(TIMER_Ch6, 65535);
  0081 c606         [1]     LDAB  #6
  0083 87           [1]     CLRA  
  0084 6c80         [2]     STD   0,SP
  0086 c6ff         [1]     LDAB  #255
  0088 43           [1]     DECA  
  0089 160000       [4]     JSR   Timer_Set
  105:    Timer_Enable(TIMER_Ch6, bFALSE);
  008c c606         [1]     LDAB  #6
  008e 87           [1]     CLRA  
  008f 6c80         [2]     STD   0,SP
  0091 c7           [1]     CLRB  
  0092 160000       [4]     JSR   Timer_Enable
  0095 1bf010       [2]     LEAS  16,SP
  106:  }
  0098 3d           [5]     RTS   
  107:  
  108:  // ----------------------------------------
  109:  // LCD_Clear
  110:  // 
  111:  // Clears the LCD
  112:  // Input:
  113:  //   none
  114:  // Output:
  115:  //   none
  116:  // Conditions:
  117:  //   LCD_Setup() has been run
  118:  void LCD_Clear(void)
  119:  {
*** EVALUATION ***

Function: LCD_Clear
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  120:    UINT8 i;  
  121:    SetRAMAddress(0);
  0000 c7           [1]     CLRB  
  0001 87           [1]     CLRA  
  0002 160000       [4]     JSR   SetRAMAddress
  122:    
  123:    for (i = 0; i < 128; i++)
  0005 87           [1]     CLRA  
  124:    {
  125:      (void)LCD_OutChar(' ');
  0006 c620         [1]     LDAB  #32
  0008 36           [2]     PSHA  
  0009 160000       [4]     JSR   LCD_OutChar
  000c 33           [3]     PULB  
  000d 52           [1]     INCB  
  000e c180         [1]     CMPB  #128
  0010 b710         [1]     TFR   B,A
  0012 25f2         [3/1]   BCS   *-12 ;abs = 0006
  126:    }
  127:    
  128:    SetRAMAddress(0);  
  0014 c7           [1]     CLRB  
  0015 87           [1]     CLRA  
  0016 060000       [3]     JMP   SetRAMAddress
  129:  }
  130:  
  131:  // ----------------------------------------
  132:  // LCD_ClearLine
  133:  // 
  134:  // Clears the LCD at the line specified
  135:  // Input:
  136:  //   line is the line position
  137:  // Output:
  138:  //   none
  139:  // Conditions:
  140:  //   LCD_Setup() has been run
  141:  void LCD_ClearLine(const UINT8 line)
  142:  {
*** EVALUATION ***

Function: LCD_ClearLine
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  143:    LCD_SetLine(line);
  0000 160000       [4]     JSR   LCD_SetLine
  144:    LCD_OutString("                "); 
  0003 cc0000       [2]     LDD   #"                "
  0006 060000       [3]     JMP   LCD_OutString
  145:  }
  146:  
  147:  // ----------------------------------------
  148:  // LCD_CursorHome
  149:  // 
  150:  // Homes the cursor
  151:  // Input:
  152:  //   none
  153:  // Output:
  154:  //   none
  155:  // Conditions:
  156:  //   LCD_Setup() has been run
  157:  void LCD_CursorHome(void)
  158:  {
*** EVALUATION ***

Function: LCD_CursorHome
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  159:    // Set cursor pointer to home address
  160:    SetCGAddress(0, 1);
  0000 c7           [1]     CLRB  
  0001 37           [2]     PSHB  
  0002 52           [1]     INCB  
  0003 160000       [4]     JSR   SetCGAddress
  0006 32           [3]     PULA  
  161:  }
  0007 3d           [5]     RTS   
  162:  
  163:  // ----------------------------------------
  164:  // LCD_TextHome
  165:  // 
  166:  // Sets up the Cursor position to the start of the LCD
  167:  // Input:
  168:  //   none
  169:  // Output:
  170:  //   none
  171:  // Conditions:
  172:  //   LCD_Setup() has been run
  173:  void LCD_TextHome(void)
  174:  {
*** EVALUATION ***

Function: LCD_TextHome
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  175:    // Set text home address (start of RAM)
  176:    WriteData(0x00);
  0000 c7           [1]     CLRB  
  0001 160000       [4]     JSR   WriteData
  177:    WriteData(0x00);
  0004 c7           [1]     CLRB  
  0005 160000       [4]     JSR   WriteData
  178:    WriteCommand(SET_TEXT_HOME);
  0008 c640         [1]     LDAB  #64
  000a 060000       [3]     JMP   WriteCommand
  179:  }
  180:  
  181:  // ----------------------------------------
  182:  // LCD_TextArea
  183:  // 
  184:  // Sets up the area available to use on the LCD
  185:  // Input:
  186:  //   column is the amount of columns to use e.g 16
  187:  // Output:
  188:  //   none
  189:  // Conditions:
  190:  //   LCD_Setup() has been run
  191:  void LCD_TextArea(UINT8 const column)
  192:  {
*** EVALUATION ***

Function: LCD_TextArea
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  193:    // Set text area (16 columns)
  194:    WriteData(column);
  0000 160000       [4]     JSR   WriteData
  195:    WriteData(0x00);
  0003 c7           [1]     CLRB  
  0004 160000       [4]     JSR   WriteData
  196:    
  197:    WriteCommand(SET_TEXTAREA);
  0007 c641         [1]     LDAB  #65
  0009 060000       [3]     JMP   WriteCommand
  198:  }
  199:  
  200:  // ----------------------------------------
  201:  // LCD_OutChar
  202:  // 
  203:  // Writes a character to the LCD
  204:  // Input:
  205:  //   
  206:  // Output:
  207:  //   none
  208:  // Conditions:
  209:  //  none
  210:  BOOL LCD_OutChar(INT8 const data)
  211:  {
*** EVALUATION ***

Function: LCD_OutChar
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  212:    if (data == '\0' || data == 0)
  0000 046103       [3]     TBNE  B,*+6 ;abs = 0006
  213:      return bFALSE;  
  0003 c7           [1]     CLRB  
  0004 200c         [3]     BRA   *+14 ;abs = 0012
  214:    
  215:    WriteData(data - 0x20);
  0006 c020         [1]     SUBB  #32
  0008 160000       [4]     JSR   WriteData
  216:    WriteCommand(DATA_WRITE);
  000b c6c0         [1]     LDAB  #192
  000d 160000       [4]     JSR   WriteCommand
  217:    return bTRUE;
  0010 c601         [1]     LDAB  #1
  0012 87           [1]     CLRA  
  218:  }
  0013 3d           [5]     RTS   
  219:  
  220:  // ----------------------------------------
  221:  // LCD_OutInteger
  222:  // 
  223:  // Writes a number to the LCD
  224:  // Input:
  225:  //   data is the number to write to the LCD
  226:  // Output:
  227:  //   none
  228:  // Conditions:
  229:  //   LCD_Setup() has been run
  230:  void LCD_OutInteger(UINT16 const data)
  231:  {
*** EVALUATION ***

Function: LCD_OutInteger
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 1b99         [2]     LEAS  -7,SP
  0002 3b           [2]     PSHD  
  232:    UINT16 number;
  233:    UINT8 tenThousand, thousand, hundred, ten, single;
  234:    tenThousand = 0;
  0003 6987         [2]     CLR   7,SP
  235:    thousand    = 0;
  0005 6985         [2]     CLR   5,SP
  236:    hundred     = 0;
  0007 6984         [2]     CLR   4,SP
  237:    ten         = 0;
  0009 6986         [2]     CLR   6,SP
  238:    single      = 0;
  239:    number      = data;   
  000b 6c82         [2]     STD   2,SP
  240:    
  241:    if (number >= 100000)
  242:      return;
  243:    
  244:    if (number >= 10000)
  000d 8c2710       [2]     CPD   #10000
  0010 2518         [3/1]   BCS   *+26 ;abs = 002a
  245:    {
  246:      tenThousand = (UINT8)(number / 10000);
  0012 ce2710       [2]     LDX   #10000
  0015 1810         [12]    IDIV  
  0017 b751         [1]     TFR   X,B
  0019 6b87         [2]     STAB  7,SP
  247:      number -= (tenThousand * 10000);
  001b 87           [1]     CLRA  
  001c cd2710       [2]     LDY   #10000
  001f 13           [3]     EMUL  
  0020 3b           [2]     PSHD  
  0021 ec82         [3]     LDD   2,SP
  0023 a3b1         [3]     SUBD  2,SP+
  0025 6c82         [2]     STD   2,SP
  248:      tenThousand |= 0x30;
  0027 0c8730       [4]     BSET  7,SP,#48
  249:    }
  250:    if (number >= 1000) 
  002a ec82         [3]     LDD   2,SP
  002c 8c03e8       [2]     CPD   #1000
  002f 2512         [3/1]   BCS   *+20 ;abs = 0043
  251:    {
  252:      thousand = (UINT8)(number / 1000);
  0031 ce03e8       [2]     LDX   #1000
  0034 1810         [12]    IDIV  
  0036 b751         [1]     TFR   X,B
  0038 6b85         [2]     STAB  5,SP
  253:      number -= (thousand * 1000);
  003a 87           [1]     CLRA  
  003b cd03e8       [2]     LDY   #1000
  003e 0779         [4]     BSR   *+123 ;abs = 00b9
  254:      thousand |= 0x30;
  0040 0c8530       [4]     BSET  5,SP,#48
  255:    }
  256:    if (number >= 100)                       //if number is 300, 300/100 = 3
  0043 ec82         [3]     LDD   2,SP
  0045 8c0064       [2]     CPD   #100
  0048 2512         [3/1]   BCS   *+20 ;abs = 005c
  257:    {
  258:      hundred = (UINT8)(number / 100);
  004a ce0064       [2]     LDX   #100
  004d 1810         [12]    IDIV  
  004f b751         [1]     TFR   X,B
  0051 6b84         [2]     STAB  4,SP
  259:      number -= (hundred * 100);             //wtfuggles?!?!?! must be a better way...
  0053 87           [1]     CLRA  
  0054 cd0064       [2]     LDY   #100
  0057 0760         [4]     BSR   *+98 ;abs = 00b9
  260:      hundred |= 0x30;                       //convert to ASCII by ORing with 0x30  
  0059 0c8430       [4]     BSET  4,SP,#48
  261:    }
  262:    if (number >= 10)
  005c ec82         [3]     LDD   2,SP
  005e 8c000a       [2]     CPD   #10
  0061 2512         [3/1]   BCS   *+20 ;abs = 0075
  263:    {
  264:      ten = (UINT8)(number / 10);
  0063 ce000a       [2]     LDX   #10
  0066 1810         [12]    IDIV  
  0068 b751         [1]     TFR   X,B
  006a 6b86         [2]     STAB  6,SP
  265:      number -= (ten * 10);
  006c 87           [1]     CLRA  
  006d cd000a       [2]     LDY   #10
  0070 0747         [4]     BSR   *+73 ;abs = 00b9
  266:      ten |= 0x30;  
  0072 0c8630       [4]     BSET  6,SP,#48
  267:    }
  268:    if (number >= 0)
  269:    {
  270:      single = (UINT8)number;
  0075 e683         [3]     LDAB  3,SP
  0077 6b88         [2]     STAB  8,SP
  271:      single |= 0x30;   
  0079 0c8830       [4]     BSET  8,SP,#48
  272:    }
  273:    
  274:    if (thousand == 0 && tenThousand != 0)
  007c e685         [3]     LDAB  5,SP
  007e 2607         [3/1]   BNE   *+9 ;abs = 0087
  0080 e687         [3]     LDAB  7,SP
  0082 2703         [3/1]   BEQ   *+5 ;abs = 0087
  275:      thousand |= 0x30;
  0084 0c8530       [4]     BSET  5,SP,#48
  276:      
  277:    if (hundred == 0 && thousand != 0)
  0087 e684         [3]     LDAB  4,SP
  0089 2607         [3/1]   BNE   *+9 ;abs = 0092
  008b e685         [3]     LDAB  5,SP
  008d 2703         [3/1]   BEQ   *+5 ;abs = 0092
  278:      hundred |= 0x30;
  008f 0c8430       [4]     BSET  4,SP,#48
  279:    
  280:    if (ten == 0 && hundred != 0)
  0092 e686         [3]     LDAB  6,SP
  0094 2607         [3/1]   BNE   *+9 ;abs = 009d
  0096 e684         [3]     LDAB  4,SP
  0098 2703         [3/1]   BEQ   *+5 ;abs = 009d
  281:      ten |= 0x30;
  009a 0c8630       [4]     BSET  6,SP,#48
  282:    
  283:    
  284:    (void)LCD_OutChar(tenThousand);
  009d e687         [3]     LDAB  7,SP
  009f 160000       [4]     JSR   LCD_OutChar
  285:    (void)LCD_OutChar(thousand);
  00a2 e685         [3]     LDAB  5,SP
  00a4 160000       [4]     JSR   LCD_OutChar
  286:    (void)LCD_OutChar(hundred);
  00a7 e684         [3]     LDAB  4,SP
  00a9 160000       [4]     JSR   LCD_OutChar
  287:    (void)LCD_OutChar(ten);
  00ac e686         [3]     LDAB  6,SP
  00ae 160000       [4]     JSR   LCD_OutChar
  288:    (void)LCD_OutChar(single);
  00b1 e688         [3]     LDAB  8,SP
  00b3 160000       [4]     JSR   LCD_OutChar
  289:  }
  00b6 1b89         [2]     LEAS  9,SP
  00b8 3d           [5]     RTS   
  00b9 13           [3]     EMUL  
  00ba 3b           [2]     PSHD  
  00bb ec86         [3]     LDD   6,SP
  00bd a3b1         [3]     SUBD  2,SP+
  00bf 6c84         [2]     STD   4,SP
  00c1 3d           [5]     RTS   
  290:  
  291:  // ----------------------------------------
  292:  // LCD_OutString
  293:  // 
  294:  // Writes a character to the LCD
  295:  // Input:
  296:  //   data is the string to write to the LCD
  297:  // Output:
  298:  //   none
  299:  // Conditions:
  300:  //   LCD_Setup() has been run
  301:  void LCD_OutString(INT8 * const data)
  302:  {
*** EVALUATION ***

Function: LCD_OutString
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 6cad         [2]     STD   3,-SP
  303:    INT8 i;
  304:    for (i = 0; i < COLUMN_SIZE; i++)
  0002 6982         [2]     CLR   2,SP
  305:    {
  306:      if ( !LCD_OutChar(data[i]) )
  0004 e682         [3]     LDAB  2,SP
  0006 b714         [1]     SEX   B,D
  0008 e380         [3]     ADDD  0,SP
  000a b745         [1]     TFR   D,X
  000c e600         [3]     LDAB  0,X
  000e 160000       [4]     JSR   LCD_OutChar
  0011 044408       [3]     TBEQ  D,*+11 ;abs = 001c
  0014 6282         [3]     INC   2,SP
  0016 e682         [3]     LDAB  2,SP
  0018 c110         [1]     CMPB  #16
  001a 2de8         [3/1]   BLT   *-22 ;abs = 0004
  307:        break;
  308:    }
  309:  }
  001c 1b83         [2]     LEAS  3,SP
  001e 3d           [5]     RTS   
  310:  
  311:  // ----------------------------------------
  312:  // LCD_SetFunction
  313:  // 
  314:  // Sets the function of the LCD
  315:  // Will setup the Contrast and Backlight
  316:  // Input:
  317:  //   
  318:  // Output:
  319:  //   none
  320:  // Conditions:
  321:  //  none
  322:  void LCD_SetFunction(const TLCDBacklight backlight, const INT8 contrast)
  323:  {
*** EVALUATION ***

Function: LCD_SetFunction
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 37           [2]     PSHB  
  324:    INT8 i;
  325:    
  326:    LCDF_CONTRAST_CTRL   = 1;
  0001 4c0020       [4]     BSET  _PORTAB:1,#32
  327:    LCDF_CONTRAST_ADJ    = 1;
  0004 4c0010       [4]     BSET  _PORTAB:1,#16
  328:    LCDF_CONTRAST_CTRL   = 0;
  0007 4d0020       [4]     BCLR  _PORTAB:1,#32
  329:    LCDF_CONTRAST_ADJ    = 0;
  000a 4d0010       [4]     BCLR  _PORTAB:1,#16
  330:    LCDF_CONTRAST_CTRL   = 1;
  000d 4c0020       [4]     BSET  _PORTAB:1,#32
  331:    
  332:    // Set the contrast
  333:    for (i = 0; i < contrast; i++)
  0010 c7           [1]     CLRB  
  0011 2007         [3]     BRA   *+9 ;abs = 001a
  334:    { 
  335:       LCDF_CONTRAST_ADJ = 1;
  0013 4c0010       [4]     BSET  _PORTAB:1,#16
  336:       LCDF_CONTRAST_ADJ = 0;
  0016 4d0010       [4]     BCLR  _PORTAB:1,#16
  0019 52           [1]     INCB  
  001a e180         [3]     CMPB  0,SP
  001c 2df5         [3/1]   BLT   *-9 ;abs = 0013
  337:    }
  338:    
  339:    LCDF_BACKLIGHT = (UINT8)backlight;
  001e 0e840105     [4]     BRSET 4,SP,#1,*+9 ;abs = 0027
  0022 4d0040       [4]     BCLR  _PORTAB:1,#64
  0025 2003         [3]     BRA   *+5 ;abs = 002a
  0027 4c0040       [4]     BSET  _PORTAB:1,#64
  340:  }
  002a 32           [3]     PULA  
  002b 3d           [5]     RTS   
  341:  
  342:  // ----------------------------------------
  343:  // LCD_SetLine
  344:  // 
  345:  // Sets the current line of the LCD
  346:  // Input:
  347:  //   
  348:  // Output:
  349:  //   none
  350:  // Conditions:
  351:  //  none
  352:  void LCD_SetLine(const UINT8 line)
  353:  {  
*** EVALUATION ***

Function: LCD_SetLine
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 37           [2]     PSHB  
  354:    // This is due to the fact that each new line starts
  355:    // after the amount of columns
  356:    // i.e new line after 16 columns
  357:    // then another, etc
  358:    SetRAMAddress(COLUMN_SIZE * line);
  0001 c610         [1]     LDAB  #16
  0003 a680         [3]     LDAA  0,SP
  0005 12           [1]     MUL   
  0006 160000       [4]     JSR   SetRAMAddress
  359:  }
  0009 32           [3]     PULA  
  000a 3d           [5]     RTS   
  360:  
  361:  // ----------------------------------------
  362:  // LCD_SetCursor
  363:  // 
  364:  // Sets the current cursor position of the LCD
  365:  // Input:
  366:  //   x is the x address (column)
  367:  //   y is the y address (row)
  368:  // Output:
  369:  //   none
  370:  // Conditions:
  371:  //   LCD_Setup() has been run
  372:  void LCD_SetCursor(const UINT8 x, const UINT8 y)
  373:  {
*** EVALUATION ***

Function: LCD_SetCursor
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 37           [2]     PSHB  
  374:    SetCGAddress(x, y);
  0001 e683         [3]     LDAB  3,SP
  0003 37           [2]     PSHB  
  0004 e681         [3]     LDAB  1,SP
  0006 160000       [4]     JSR   SetCGAddress
  0009 3a           [3]     PULD  
  375:  }
  000a 3d           [5]     RTS   
  376:  
  377:  void LCD_DisplayOff(void)
  378:  {
*** EVALUATION ***

Function: LCD_DisplayOff
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  379:    WriteCommand(DISPLAY_OFF);
  0000 c690         [1]     LDAB  #144
  0002 060000       [3]     JMP   WriteCommand
  380:  }
  381:  
  382:  void LCD_DisplayOn(void)
  383:  {
*** EVALUATION ***

Function: LCD_DisplayOn
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  384:    WriteCommand(DISPLAY_MODE);
  0000 c694         [1]     LDAB  #148
  0002 060000       [3]     JMP   WriteCommand
  385:  }
  386:  
  387:  // ----------------------------------------
  388:  // InChar
  389:  // 
  390:  // Reads data from the LCD
  391:  // Input:
  392:  //   dataPtr is a pointer to the variable in which the data from
  393:  //   PORTA will be stored
  394:  // Output:
  395:  //   none
  396:  // Conditions:
  397:  //   LCD_Setup() has been run
  398:  void InChar(UINT8 * const dataPtr)
  399:  {
*** EVALUATION ***

Function: InChar
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
  400:    DDRA = Output;
  0001 c6ff         [1]     LDAB  #255
  0003 5b00         [2]     STAB  _DDRAB
  401:    WriteCommand(DATA_READ);  
  0005 c6c3         [1]     LDAB  #195
  0007 160000       [4]     JSR   WriteCommand
  402:    
  403:    DDRA = Input;
  000a 790000       [3]     CLR   _DDRAB
  404:    LCDF_CD = eData;
  000d 4d0004       [4]     BCLR  _PORTAB:1,#4
  405:    
  406:    *dataPtr = PORTA;
  0010 ee80         [3]     LDX   0,SP
  0012 d600         [3]     LDAB  _PORTAB
  0014 6b00         [2]     STAB  0,X
  407:    DDRA = Output;
  0016 c6ff         [1]     LDAB  #255
  0018 5b00         [2]     STAB  _DDRAB
  408:  }
  001a 3a           [3]     PULD  
  001b 3d           [5]     RTS   
  409:  
  410:  // ----------------------------------------
  411:  // SetCGAddress
  412:  // 
  413:  // Sets the character generator address
  414:  // Input:
  415:  //   x is the x address (column)
  416:  //   y is the y address (row)
  417:  // Output:
  418:  //   none
  419:  // Conditions:
  420:  //   LCD_Setup() has been run
  421:  void SetCGAddress(const UINT8 x, const UINT8 y)
  422:  {
*** EVALUATION ***

Function: SetCGAddress
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 37           [2]     PSHB  
  423:    WriteData(x);
  0001 e683         [3]     LDAB  3,SP
  0003 160000       [4]     JSR   WriteData
  424:    WriteData(y);
  0006 e680         [3]     LDAB  0,SP
  0008 160000       [4]     JSR   WriteData
  425:    WriteCommand(SET_CURSOR);
  000b c621         [1]     LDAB  #33
  000d 160000       [4]     JSR   WriteCommand
  426:  }
  0010 32           [3]     PULA  
  0011 3d           [5]     RTS   
  427:  
  428:  // ----------------------------------------
  429:  // SetRAMAddress
  430:  // 
  431:  // Sets the RAM address of the LCD
  432:  // Input:
  433:  //   address is the pointer to a 16 bit address to point to the location
  434:  //   of the ram on the LCD
  435:  // Output:
  436:  //   none
  437:  // Conditions:
  438:  //   LCD_Setup() has been run
  439:  void SetRAMAddress(const UINT16 address)
  440:  {
*** EVALUATION ***

Function: SetRAMAddress
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  441:    TUINT16 address16;
  442:    address16.l = address;
  0000 3b           [2]     PSHD  
  443:    WriteData(address16.s.Lo);
  0001 e681         [3]     LDAB  1,SP
  0003 160000       [4]     JSR   WriteData
  444:    WriteData(address16.s.Hi);  
  0006 e680         [3]     LDAB  0,SP
  0008 160000       [4]     JSR   WriteData
  445:    WriteCommand(SET_RAM);
  000b c624         [1]     LDAB  #36
  000d 160000       [4]     JSR   WriteCommand
  446:  }
  0010 3a           [3]     PULD  
  0011 3d           [5]     RTS   
  447:  
  448:  // ----------------------------------------
  449:  // StatusCheck
  450:  // 
  451:  // Determines if it is safe to read/write to the LCD
  452:  // Input:
  453:  //   none
  454:  // Output:
  455:  //   none
  456:  // Conditions:
  457:  //   LCD_Setup() has been run
  458:  UINT8 StatusCheck(void)
  459:  { 
*** EVALUATION ***

Function: StatusCheck
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  460:    UINT8 status;
  461:   
  462:    //Default settings 
  463:    DDRA = Input;
  0000 790000       [3]     CLR   _DDRAB
  464:    LCDF_WR = 1;
  0003 4c0001       [4]     BSET  _PORTAB:1,#1
  465:    LCDF_RD = 1;
  0006 4c0002       [4]     BSET  _PORTAB:1,#2
  466:    
  467:    LCDF_CD = eCommand;
  0009 4c0004       [4]     BSET  _PORTAB:1,#4
  468:    LCDF_RD = 0;
  000c 4d0002       [4]     BCLR  _PORTAB:1,#2
  469:   
  470:    // Wait at least 150ns to read data
  471:    asm nop;
  000f a7           [1]     NOP   
  472:    asm nop;
  0010 a7           [1]     NOP   
  473:    asm nop;
  0011 a7           [1]     NOP   
  474:    asm nop;
  0012 a7           [1]     NOP   
  475:    asm nop;
  0013 a7           [1]     NOP   
  476:   
  477:    status = PORTA;
  0014 d600         [3]     LDAB  _PORTAB
  0016 37           [2]     PSHB  
  478:    
  479:    //Put LCD back in default setting 
  480:    LCDF_RD = 1;
  0017 4c0002       [4]     BSET  _PORTAB:1,#2
  481:    
  482:    return (status & 0x03); 
  001a c403         [1]     ANDB  #3
  483:  }
  001c 32           [3]     PULA  
  001d 3d           [5]     RTS   
  484:  
  485:  // ----------------------------------------
  486:  // WaitForReady
  487:  // 
  488:  // Waits for the LCD to become ready 
  489:  // Input: 
  490:  //   None 
  491:  // Output: 
  492:  //   None
  493:  // Conditions: 
  494:  //   Assumes LCD_Setup has been called
  495:  
  496:  void WaitForReady(void)
  497:  {
*** EVALUATION ***

Function: WaitForReady
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  498:    // Wait until STA0 & STA1 are set
  499:    while ( (StatusCheck()) != 0x03);
  0000 0700         [4]     BSR   StatusCheck
  0002 c103         [1]     CMPB  #3
  0004 26fa         [3/1]   BNE   *-4 ;abs = 0000
  500:    
  501:    
  502:  }
  0006 3d           [5]     RTS   
  503:  
  504:  // ----------------------------------------
  505:  // WriteCommand
  506:  // 
  507:  // Writes a command to the LCD (when LCD is ready to accept)
  508:  // Input: 
  509:  //   an LCD command 
  510:  // Output: 
  511:  //   None
  512:  // Conditions: 
  513:  //   Assumes LCD_Setup has been called
  514:  
  515:  void WriteCommand(const UINT8 command)          
  516:  {
*** EVALUATION ***

Function: WriteCommand
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 37           [2]     PSHB  
  517:    WaitForReady();
  0001 0700         [4]     BSR   WaitForReady
  518:    
  519:    DDRA = Output;
  0003 c6ff         [1]     LDAB  #255
  0005 5b00         [2]     STAB  _DDRAB
  520:    
  521:    PORTA = command;
  0007 32           [3]     PULA  
  0008 5a00         [2]     STAA  _PORTAB
  522:    LCDF_CD = eCommand;
  000a 4c0004       [4]     BSET  _PORTAB:1,#4
  523:    LCDF_WR = 0;
  000d 4d0001       [4]     BCLR  _PORTAB:1,#1
  524:    
  525:    // Wait at least 80ns (data set-up time)
  526:    asm nop;
  0010 a7           [1]     NOP   
  527:    asm nop;
  0011 a7           [1]     NOP   
  528:    asm nop;
  0012 a7           [1]     NOP   
  529:    
  530:    LCDF_WR = 1;
  0013 4c0001       [4]     BSET  _PORTAB:1,#1
  531:    DDRA = Input;
  0016 790000       [3]     CLR   _DDRAB
  532:  
  533:  }
  0019 3d           [5]     RTS   
  534:  
  535:  // ----------------------------------------
  536:  // WriteData
  537:  // 
  538:  // Writes 1 byte of data to the LCD  
  539:  // Input: 
  540:  //   Data to be written 
  541:  // Output: 
  542:  //   None
  543:  // Conditions: 
  544:  //   Assumes LCD_Setup has been called
  545:  
  546:  void WriteData(const UINT8 data)
  547:  {
*** EVALUATION ***

Function: WriteData
Source  : D:\Profiles\10824579\Desktop\Project\Sources\LCD.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\LCD.c.o -WmsgSd1106 -WmsgSd5703

  0000 37           [2]     PSHB  
  548:    WaitForReady();
  0001 0700         [4]     BSR   WaitForReady
  549:    
  550:    DDRA = Output;
  0003 c6ff         [1]     LDAB  #255
  0005 5b00         [2]     STAB  _DDRAB
  551:    
  552:    PORTA = data;
  0007 32           [3]     PULA  
  0008 5a00         [2]     STAA  _PORTAB
  553:    LCDF_CD = eData;
  000a 4d0004       [4]     BCLR  _PORTAB:1,#4
  554:    LCDF_WR = 0;
  000d 4d0001       [4]     BCLR  _PORTAB:1,#1
  555:      
  556:    // Wait at least 80ns (data set-up time)
  557:    asm nop;
  0010 a7           [1]     NOP   
  558:    asm nop;
  0011 a7           [1]     NOP   
  559:    asm nop;
  0012 a7           [1]     NOP   
  560:    
  561:    LCDF_WR = 1;
  0013 4c0001       [4]     BSET  _PORTAB:1,#1
  562:    DDRA = Input;
  0016 790000       [3]     CLR   _DDRAB
  563:  }
  0019 3d           [5]     RTS   
  564:  
