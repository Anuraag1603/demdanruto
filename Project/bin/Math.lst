*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.38 Build 9056, Feb 26 2009

    1:  // ----------------------------------------
    2:  // Filename:     Math.c
    3:  // Description:
    4:  //  The math library containing Q Notation and Square Root formulas.  
    5:  //
    6:  // Author: Danny Sok
    7:  // Date:   14-11-2011
    8:  // Date LM: 16-11-2011
    9:  
   10:  #include "types.h"
   11:  #include "Math.h"
   12:  
   13:  
   14:  // *8 ~= << 3
   15:  // /8 ~= >> 3
   16:  
   17:  // ----------------------------------------
   18:  // Math_ToQNotation
   19:  // 
   20:  // Converts the given number to Q Notation based on a base given
   21:  // Input:
   22:  //  number is the number to use for Q Notation conversion
   23:  //  base is the base to use for the conversion
   24:  // Output:
   25:  //  The QNotated form of the number
   26:  // Conditions:
   27:  //  none
   28:  UINT32 Math_ToQNotation(const UINT32 number, const UINT8 base)
   29:  {
*** EVALUATION ***

Function: Math_ToQNotation
Source  : D:\Profiles\10824579\Desktop\Project\Sources\Math.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\Math.c.o -WmsgSd1106 -WmsgSd5703

   30:    return number << base;
  0000 ed84         [3]     LDY   4,SP
  0002 ee82         [3]     LDX   2,SP
  0004 160000       [4]     JSR   _LSHL
   31:  }
  0007 3d           [5]     RTS   
   32:  
   33:  // ----------------------------------------
   34:  // Math_FromQNotation
   35:  // 
   36:  // Determines the total energy usage
   37:  // Input:
   38:  //  number is the number in Q Notation form
   39:  //  side is the side of the Q Notation where m is on the left, and n is on the right. (mQn)
   40:  // Output:
   41:  //  The number on the side. Useful for display on the LCD.
   42:  // Conditions:
   43:  //  none
   44:  UINT16 Math_FromQNotation(UINT32 const number, const TQNotationSide side, const BOOL base)
   45:  {
*** EVALUATION ***

Function: Math_FromQNotation
Source  : D:\Profiles\10824579\Desktop\Project\Sources\Math.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\Math.c.o -WmsgSd1106 -WmsgSd5703

  0000 1b9c         [2]     LEAS  -4,SP
   46:    UINT32 tempNumber;
   47:    UINT8 hundredThousand, tenThousand, thousand;
   48:    hundredThousand, tenThousand, thousand = 0;
   49:    
   50:    if (base)
  0002 04440f       [3]     TBEQ  D,*+18 ;abs = 0014
   51:      tempNumber = (UINT32)(number >> Base);
  0005 ed8a         [3]     LDY   10,SP
  0007 ee88         [3]     LDX   8,SP
  0009 c603         [1]     LDAB  #3
  000b 160000       [4]     JSR   _LSHRU
  000e 6c82         [2]     STD   2,SP
  0010 6e80         [2]     STX   0,SP
  0012 2008         [3]     BRA   *+10 ;abs = 001c
   52:    else
   53:      tempNumber = number;
  0014 ec8a         [3]     LDD   10,SP
  0016 6c82         [2]     STD   2,SP
  0018 ec88         [3]     LDD   8,SP
  001a 6c80         [2]     STD   0,SP
   54:    
   55:    switch(side)
  001c ec86         [3]     LDD   6,SP
  001e 2705         [3/1]   BEQ   *+7 ;abs = 0025
  0020 040412       [3]     DBEQ  D,*+21 ;abs = 0035
  0023 205d         [3]     BRA   *+95 ;abs = 0082
   56:    {
   57:      case qLeft:
   58:        return (UINT16) (tempNumber / 1000);   // Change base back to 2
  0025 cc03e8       [2]     LDD   #1000
  0028 3b           [2]     PSHD  
  0029 c7           [1]     CLRB  
  002a 87           [1]     CLRA  
  002b 3b           [2]     PSHD  
  002c ec86         [3]     LDD   6,SP
  002e ee84         [3]     LDX   4,SP
  0030 160000       [4]     JSR   _LDIVU
  0033 204d         [3]     BRA   *+79 ;abs = 0082
   59:      break;
   60:      case qRight:
   61:        if (tempNumber >= 100000)
  0035 ee80         [3]     LDX   0,SP
  0037 8e0001       [2]     CPX   #1
  003a 220a         [3/1]   BHI   *+12 ;abs = 0046
  003c 042527       [3]     DBNE  X,*+42 ;abs = 0066
  003f ec82         [3]     LDD   2,SP
  0041 8c86a0       [2]     CPD   #34464
  0044 2520         [3/1]   BCS   *+34 ;abs = 0066
   62:        {
   63:          hundredThousand = (UINT8)(number / 1000);
  0046 cd03e8       [2]     LDY   #1000
  0049 35           [2]     PSHY  
  004a c7           [1]     CLRB  
  004b 87           [1]     CLRA  
  004c 3b           [2]     PSHD  
  004d ec8e         [3]     LDD   14,SP
  004f ee8c         [3]     LDX   12,SP
  0051 160000       [4]     JSR   _LDIVU
   64:          tempNumber -= (hundredThousand * 1000);  
  0054 0750         [4]     BSR   *+82 ;abs = 00a6
  0056 3b           [2]     PSHD  
  0057 ec84         [3]     LDD   4,SP
  0059 a380         [3]     SUBD  0,SP
  005b 6c84         [2]     STD   4,SP
  005d ec82         [3]     LDD   2,SP
  005f 34           [2]     PSHX  
  0060 e281         [3]     SBCB  1,SP
  0062 a2b1         [3]     SBCA  2,SP+
  0064 6ca1         [2]     STD   2,+SP
   65:        }
   66:        if (tempNumber >= 10000)
  0066 ec80         [3]     LDD   0,SP
  0068 2607         [3/1]   BNE   *+9 ;abs = 0071
  006a ec82         [3]     LDD   2,SP
  006c 8c2710       [2]     CPD   #10000
  006f 2502         [3/1]   BCS   *+4 ;abs = 0073
   67:        {
   68:          tenThousand = (UINT8)(tempNumber / 1000);
  0071 0712         [4]     BSR   *+20 ;abs = 0085
   69:          tempNumber -= (tenThousand * 1000);
   70:        }
   71:        if (tempNumber >= 1000)
  0073 ec80         [3]     LDD   0,SP
  0075 2607         [3/1]   BNE   *+9 ;abs = 007e
  0077 ec82         [3]     LDD   2,SP
  0079 8c03e8       [2]     CPD   #1000
  007c 2502         [3/1]   BCS   *+4 ;abs = 0080
   72:        {
   73:          thousand = (UINT8)(tempNumber / 1000);
  007e 0705         [4]     BSR   *+7 ;abs = 0085
   74:          tempNumber -= (thousand * 1000);
   75:        }
   76:        return (UINT16)tempNumber;              // Only take the last 3 digits as the base is 1000
  0080 ec82         [3]     LDD   2,SP
   77:      break;
   78:      
   79:    }
   80:  }
  0082 1b84         [2]     LEAS  4,SP
  0084 3d           [5]     RTS   
  0085 cd03e8       [2]     LDY   #1000
  0088 35           [2]     PSHY  
  0089 c7           [1]     CLRB  
  008a 87           [1]     CLRA  
  008b 3b           [2]     PSHD  
  008c ec88         [3]     LDD   8,SP
  008e ee86         [3]     LDX   6,SP
  0090 160000       [4]     JSR   _LDIVU
  0093 0711         [4]     BSR   *+19 ;abs = 00a6
  0095 3b           [2]     PSHD  
  0096 ec86         [3]     LDD   6,SP
  0098 a3b1         [3]     SUBD  2,SP+
  009a 6c84         [2]     STD   4,SP
  009c 34           [2]     PSHX  
  009d ec84         [3]     LDD   4,SP
  009f e281         [3]     SBCB  1,SP
  00a1 a2b1         [3]     SBCA  2,SP+
  00a3 6c82         [2]     STD   2,SP
  00a5 3d           [5]     RTS   
  00a6 87           [1]     CLRA  
  00a7 cd03e8       [2]     LDY   #1000
  00aa 13           [3]     EMUL  
  00ab 060000       [3]     JMP   _ILSEXT
   81:  
   82:  // ----------------------------------------
   83:  // Math_FindPower
   84:  // 
   85:  // Determines the power usage
   86:  // Input:
   87:  //  voltage is the analog representation of voltage e.g. 5 Volts
   88:  //  current is the analog representation of current e.g. 1 Amp
   89:  // Output:
   90:  //  The instantaneous power
   91:  // Conditions:
   92:  //  none
   93:  UINT16 Math_FindPower(const INT16 voltage, const INT16 current)
   94:  {
*** EVALUATION ***

Function: Math_FindPower
Source  : D:\Profiles\10824579\Desktop\Project\Sources\Math.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\Math.c.o -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
   95:    return voltage * current;
  0001 ec84         [3]     LDD   4,SP
  0003 ed80         [3]     LDY   0,SP
  0005 13           [3]     EMUL  
   96:  }
  0006 30           [3]     PULX  
  0007 3d           [5]     RTS   
   97:  
   98:  // ----------------------------------------
   99:  // Math_FindEnergy
  100:  // 
  101:  // Determines the total energy usage
  102:  // Input:
  103:  //  DEM_AvePower_Array is the array for the 16 samples of power
  104:  // Output:
  105:  //  none
  106:  // Conditions:
  107:  //  none
  108:  void Math_FindEnergy(const INT16 DEM_AvePower_Array[])
  109:  {
*** EVALUATION ***

Function: Math_FindEnergy
Source  : D:\Profiles\10824579\Desktop\Project\Sources\Math.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\Math.c.o -WmsgSd1106 -WmsgSd5703

  0000 3b           [2]     PSHD  
  110:    // 16 Samples per Period/Cycle.
  111:    // Sum of PkTs between k=0 and n
  112:    // n = 15 then.
  113:    // 1 cycle is approx 20 milliseconds
  114:    // so 20/16 = 1.25, so sample approx every 1ms
  115:    UINT8 i;
  116:    
  117:    for (i = 0; i < 15; i++)
  0001 c7           [1]     CLRB  
  118:    {
  119:      DEM_Total_Energy.l += DEM_AvePower_Array[i];
  0002 87           [1]     CLRA  
  0003 37           [2]     PSHB  
  0004 59           [1]     LSLD  
  0005 e381         [3]     ADDD  1,SP
  0007 b745         [1]     TFR   D,X
  0009 ec00         [3]     LDD   0,X
  000b 160000       [4]     JSR   _ILSEXT
  000e f30000       [3]     ADDD  DEM_Total_Energy:2
  0011 7c0000       [3]     STD   DEM_Total_Energy:2
  0014 b754         [1]     TFR   X,D
  0016 f90000       [3]     ADCB  DEM_Total_Energy:1
  0019 b90000       [3]     ADCA  DEM_Total_Energy
  001c 7c0000       [3]     STD   DEM_Total_Energy
  001f 33           [3]     PULB  
  0020 52           [1]     INCB  
  0021 c10f         [1]     CMPB  #15
  0023 25dd         [3/1]   BCS   *-33 ;abs = 0002
  120:    }
  121:  }
  0025 3a           [3]     PULD  
  0026 3d           [5]     RTS   
  122:  
  123:  // ----------------------------------------
  124:  // Math_FindCost
  125:  // 
  126:  // Determines the total cost of the user
  127:  // Input:
  128:  //  none
  129:  // Output:
  130:  //  none
  131:  // Conditions:
  132:  //  none
  133:  void Math_FindCost(void)
  134:  {
*** EVALUATION ***

Function: Math_FindCost
Source  : D:\Profiles\10824579\Desktop\Project\Sources\Math.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\Math.c.o -WmsgSd1106 -WmsgSd5703

  135:    // Energy in kWh * Tarrif
  136:    DEM_Total_Cost += (UINT16) ( DEM_Total_Energy.l * Clock_TimeInHours() ) * DEM_Tarrif;
  0000 160000       [4]     JSR   Clock_TimeInHours
  0003 b746         [1]     TFR   D,Y
  0005 fc0000       [3]     LDD   DEM_Total_Energy:2
  0008 13           [3]     EMUL  
  0009 b746         [1]     TFR   D,Y
  000b fc0000       [3]     LDD   DEM_Tarrif
  000e 13           [3]     EMUL  
  000f f30000       [3]     ADDD  DEM_Total_Cost:2
  0012 7c0000       [3]     STD   DEM_Total_Cost:2
  0015 cc0000       [2]     LDD   #0
  0018 f90000       [3]     ADCB  DEM_Total_Cost:1
  001b b90000       [3]     ADCA  DEM_Total_Cost
  001e 7c0000       [3]     STD   DEM_Total_Cost
  137:    //return 0;
  138:  }
  0021 3d           [5]     RTS   
  139:  
  140:  // ----------------------------------------
  141:  // Math_SQRT
  142:  // 
  143:  // Determines the square roots by using an initial guess
  144:  // Input:
  145:  //  number is the number to find the root of
  146:  //  guess is the initial estimation of the root
  147:  // Output:
  148:  //  none
  149:  // Conditions:
  150:  //  none
  151:  UINT32 Math_SQRT(INT16 number, INT16 guess)
  152:  {
*** EVALUATION ***

Function: Math_SQRT
Source  : D:\Profiles\10824579\Desktop\Project\Sources\Math.c
Options : -CPUHCS12 -D__NO_FLOAT__ -Env"GENPATH=D:\Profiles\10824579\Desktop\Project;D:\Profiles\10824579\Desktop\Project\bin;D:\Profiles\10824579\Desktop\Project\prm;D:\Profiles\10824579\Desktop\Project\cmd;D:\Profiles\10824579\Desktop\Project\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -EnvOBJPATH=D:\Profiles\10824579\Desktop\Project\bin -EnvTEXTPATH=D:\Profiles\10824579\Desktop\Project\bin -Lasm=%n.lst -Ms -ObjN=D:\Profiles\10824579\Desktop\Project\Project_Data\ModCon_Board\ObjectCode\Math.c.o -WmsgSd1106 -WmsgSd5703

  153:    return 0;
  0000 ce0000       [2]     LDX   #0
  0003 b754         [1]     TFR   X,D
  154:  }
  0005 3d           [5]     RTS   
  155:  
